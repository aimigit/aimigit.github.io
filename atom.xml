<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>埃米的博客</title>
  <subtitle>纳米的十分之一</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://aimigit.github.io/"/>
  <updated>2018-09-04T06:27:11.967Z</updated>
  <id>http://aimigit.github.io/</id>
  
  <author>
    <name>aimigit</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>多机更新 Hexo 博客</title>
    <link href="http://aimigit.github.io/2018/09/04/hexo-multi-pc/"/>
    <id>http://aimigit.github.io/2018/09/04/hexo-multi-pc/</id>
    <published>2018-09-04T06:21:52.000Z</published>
    <updated>2018-09-04T06:27:11.967Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-动手前的思考"><a href="#1-动手前的思考" class="headerlink" title="1. 动手前的思考"></a>1. 动手前的思考</h2><p>还是按照我个人的老习惯，在动手前，先来理清思路，看看我们大概需要做哪些操作，为什么要做这些？这篇文章默认读者已经在另外一台电脑上部署好了，现在只是需要在另外一台电脑上部署。如果读者关注的只是如何使用 Hexo + Github Pages 搭建自己的博客，可以移步我之前的一篇文章 《知行合一 | 用 Hexo 搭建博客》。</p>
<p>既然博客的生产环境是 Hexo + Github Pages，那么重部署的工作就围绕着 Hexo 和 Github Pages 展开。回顾一下，两者在我们搭建博客的时候具体扮演着什么角色。</p>
<p>Hexo：是一个静态博客生成器，根据给定的主题，负责把写好的 Markdown 文章转换成一堆 HTML + CSS + Javascript 页面。另外，Hexo 还有把生成好的站点上传到 Github Pages 的功能。<br>Github Pages：这是我们的网站内容（那一堆 HTML + CSS + Javascript）真正存放的地方。<br>Hexo 是把 Markdown 转换成 HTML 的，那么首先，需要给 Hexo 提供 Markdown 文件。由于，我希望打开任何一台电脑都能更新最新的容，Hexo 博客的内容应该放到一个同步盘的文件夹下面，坚果云、Dropbox、OneDrive 这些都行。其次，Hexo 是基于 Node.js 的，但笔记本上完全没有 Node.js 环境，所以需要安装 Node.js。还有，很多文章都会用到类似 hexo-katex 这样的插件，新电脑上也没安装，需要安装这些必须的插件。</p>
<p>对于 Github Pages，最大的问题在于告诉 Github 服务器，这次的提交更改不是别人，也是由我做出的，所以一定要接受我的改动。在《知行合一 | 用 Hexo 搭建博客》中我已经讲过了，这个身份认证是由 SSH Key 来完成的，在重新部署中，我们还是要弄这个。</p>
<a id="more"></a>
<h2 id="2-重部署流程"><a href="#2-重部署流程" class="headerlink" title="2. 重部署流程"></a>2. 重部署流程</h2><p>2.1 文件同步<br>要把整一个 your_name.github.io 文件夹同步过来，里面包含的 .gitignore 等文件包含了等下要提交的文件对应哪个 repo 等的信息，还有</p>
<p>2.2 Hexo 配置<br>因为笔记本上完全没有 Hexo 环境，所以我们还要重新部署下，根据《知行合一 | 用 Hexo 搭建博客》步骤大体如下。</p>
<p>先安装 Node.js 和 Git，再安装完这两者后，再打开 Node.js command prompt 安装 Hexo。但由于 Node.js 官方的源安装速度非常慢，我们先将源改成国内淘宝的镜像，执行：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">npm config <span class="built_in">set</span> registry <span class="string">"https://registry.npm.taobao.org"</span></div><div class="line"><span class="built_in">cd</span> 到同步的 your_name.github.io 内， 然后再安装 Hexo：</div><div class="line"></div><div class="line"></div><div class="line">npm install -g hexo-cli</div><div class="line">安装完后，可以对比下新电脑里your_name.github.io 文件夹下面的 package.json 里面的插件和老电脑里的package.json 插件列表有什么不同，把缺的插件统统装一遍就可以了。这个就需要在同步前，也就是在敲npm install -g hexo-cli 前就把老电脑里的插件信息另存为。可惜我当时没想到这一点，不过我就额外安装过 Noise 主题和 hexo-katex 插件，所以根据我另外一篇文章 《Hexo 博客支持 KaTeX（回炉版）》，还需要执行如下命令：</div><div class="line"></div><div class="line">npm install hexo-renderer-pandoc --save</div><div class="line">npm install hexo-katex --save</div><div class="line">由于 hexo-renderer-pandoc 插件会调用 pandoc，所以还需要先去下载安装 Padoc。为了 Noise 主题，执行</div><div class="line"></div><div class="line">npm install hexo-renderer-jade --save</div><div class="line">npm install hexo-renderer-less --save</div><div class="line">为了部署，还要执行</div><div class="line"></div><div class="line">npm install hexo-deployer-git --save</div><div class="line">至此，在新的平台上运行 hexo clean，hexo generate ，hexo server 等命令应该就没有问题了。</div><div class="line"></div><div class="line">2.3 Github 配置</div><div class="line">这一环节，其实同《知行合一 | 用 Hexo 搭建博客》一样，唯一的差别就是省去了创建 repo 这一环节，因为我们的 repo 是同步过来的。具体步骤如下，更详细的解释可以看《知行合一 | 用 Hexo 搭建博客》一文：</div><div class="line"></div><div class="line">Step 1：Setting up Git。在 Git Bash 中执行如下代码即可：</div><div class="line"></div><div class="line">git config --global user.name <span class="string">"YOUR NAME"</span></div><div class="line">git config --global user.email <span class="string">"YOUR EMAIL ADDRESS"</span></div><div class="line">其中，YOUR NAME 是自己取的名字，YOUR EMAIL ADDRESS 是自己的 Github 邮箱。</div><div class="line"></div><div class="line">Step 2：Authenticating with GitHub from Git。</div><div class="line"></div><div class="line">在 Git Bash 下执行如下命令，生成 SSH key</div><div class="line"></div><div class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">"your_email@example.com"</span></div><div class="line">其中，your_email@example.com 是你的 Github 注册邮箱，剩下的一路回车即可。</div><div class="line"></div><div class="line">将 SSH key 添加到 ssh-agent</div><div class="line"></div><div class="line">在 Git Bash 下执行如下命令，开启 ssh-agent</div><div class="line"></div><div class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(ssh-agent -s)</span>"</span></div><div class="line">将这个 SSH key 添加到 ssh-agent 里去</div><div class="line"></div><div class="line">ssh-add ~/.ssh/id_rsa</div><div class="line">将 SSH key 添加到 Github 账户</div><div class="line"></div><div class="line">在 Git Bash 中将 SSH Key 拷贝出来：</div><div class="line"></div><div class="line">clip &lt; ~/.ssh/id_rsa.pub</div><div class="line">此时，SSH Key 已经在我们的剪切板里了。然后登录 Github 帐号，依次点击自己的头像，Settings，SSH and GPG keys， Add SSH key， 在 Title 这里输入 Key 的label，比如 your_name - PC，然后在 Key 里面把 SSH Key 粘贴进去，点击 Add SSH key 大功告成。</div><div class="line"></div><div class="line">测试 SSH 连接，在 Git Bash 中敲入</div><div class="line"></div><div class="line">ssh -T git@github.com</div><div class="line">应该可以看到提示你成功的信息。</div><div class="line"></div><div class="line">Hexo 部署：*执行hexo deploy 应该就可以大功告成了。</div></pre></td></tr></table></figure>
<h2 id="3-动手后的再思考"><a href="#3-动手后的再思考" class="headerlink" title="3. 动手后的再思考"></a>3. 动手后的再思考</h2><p>这篇文章写到这里，发现写的内容基本都是上一篇《知行合一 | 用 Hexo 搭建博客》内容的重复，也就是说多台电脑同时更新的问题，并不是一个完全不同的问题，绝大部分其实都是可以复用的。最初，让我困惑的并不是这些操作步骤，而是如何正确的刨分这个问题，哪些是我熟悉的，哪些是我陌生的。其实，这篇文章主要想讲两点：</p>
<p>仅仅将那些插件文件同步，并不等于安装了那些插件，所以我们才需要在新电脑上安装 hexo-katex 等插件；<br>只要将新电脑的 SSH key 添加到 Github 的项目里面，就通过了身份认证。</p>
<p>原文网址：<a href="http://lowrank.science/Hexo-Migration/" target="_blank" rel="external">http://lowrank.science/Hexo-Migration/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-动手前的思考&quot;&gt;&lt;a href=&quot;#1-动手前的思考&quot; class=&quot;headerlink&quot; title=&quot;1. 动手前的思考&quot;&gt;&lt;/a&gt;1. 动手前的思考&lt;/h2&gt;&lt;p&gt;还是按照我个人的老习惯，在动手前，先来理清思路，看看我们大概需要做哪些操作，为什么要做这些？这篇文章默认读者已经在另外一台电脑上部署好了，现在只是需要在另外一台电脑上部署。如果读者关注的只是如何使用 Hexo + Github Pages 搭建自己的博客，可以移步我之前的一篇文章 《知行合一 | 用 Hexo 搭建博客》。&lt;/p&gt;
&lt;p&gt;既然博客的生产环境是 Hexo + Github Pages，那么重部署的工作就围绕着 Hexo 和 Github Pages 展开。回顾一下，两者在我们搭建博客的时候具体扮演着什么角色。&lt;/p&gt;
&lt;p&gt;Hexo：是一个静态博客生成器，根据给定的主题，负责把写好的 Markdown 文章转换成一堆 HTML + CSS + Javascript 页面。另外，Hexo 还有把生成好的站点上传到 Github Pages 的功能。&lt;br&gt;Github Pages：这是我们的网站内容（那一堆 HTML + CSS + Javascript）真正存放的地方。&lt;br&gt;Hexo 是把 Markdown 转换成 HTML 的，那么首先，需要给 Hexo 提供 Markdown 文件。由于，我希望打开任何一台电脑都能更新最新的容，Hexo 博客的内容应该放到一个同步盘的文件夹下面，坚果云、Dropbox、OneDrive 这些都行。其次，Hexo 是基于 Node.js 的，但笔记本上完全没有 Node.js 环境，所以需要安装 Node.js。还有，很多文章都会用到类似 hexo-katex 这样的插件，新电脑上也没安装，需要安装这些必须的插件。&lt;/p&gt;
&lt;p&gt;对于 Github Pages，最大的问题在于告诉 Github 服务器，这次的提交更改不是别人，也是由我做出的，所以一定要接受我的改动。在《知行合一 | 用 Hexo 搭建博客》中我已经讲过了，这个身份认证是由 SSH Key 来完成的，在重新部署中，我们还是要弄这个。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://aimigit.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="hexo" scheme="http://aimigit.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>mysql_存储过程游标的使用</title>
    <link href="http://aimigit.github.io/2018/06/13/mysql-cursor-proc/"/>
    <id>http://aimigit.github.io/2018/06/13/mysql-cursor-proc/</id>
    <published>2018-06-13T08:11:03.000Z</published>
    <updated>2018-06-13T08:26:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>为了处理老数据，从一张父表，两张子表复制数据。涉及到生成id关联以及子表多条记录复制，使用了存储过程，cursor遍历结果集。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2>  <a id="more"></a>    
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">BEGIN</span></div><div class="line">  <span class="comment">-- 时间变量</span></div><div class="line">	<span class="keyword">DECLARE</span> c_time <span class="keyword">timestamp</span>;</div><div class="line">  <span class="comment">-- uuid变量</span></div><div class="line">  <span class="keyword">DECLARE</span> uid <span class="built_in">VARCHAR</span>(<span class="number">32</span>);</div><div class="line">  <span class="comment">-- 老id变量</span></div><div class="line">  <span class="keyword">DECLARE</span> <span class="keyword">oid</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="string">'A10E2C8C7F00000101776C9B37E79999'</span> ;</div><div class="line">	<span class="comment">-- 临时id</span></div><div class="line">	<span class="keyword">DECLARE</span> temp_id <span class="built_in">VARCHAR</span>(<span class="number">32</span>);</div><div class="line">  <span class="comment">-- 游标结束标记变量</span></div><div class="line">  <span class="keyword">DECLARE</span> s <span class="built_in">int</span> <span class="keyword">default</span> <span class="number">0</span>;</div><div class="line"></div><div class="line">	<span class="comment">-- api_funny_img结果集</span></div><div class="line">  <span class="keyword">DECLARE</span> cursor_img <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> </div><div class="line">		<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> api_funny_img <span class="keyword">WHERE</span> funny_id=<span class="keyword">oid</span>;</div><div class="line">	<span class="comment">-- cursor_word</span></div><div class="line">  <span class="keyword">DECLARE</span> cursor_word <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> </div><div class="line">		<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> api_funny_word <span class="keyword">WHERE</span> funny_id=<span class="keyword">oid</span>;</div><div class="line">  <span class="comment">-- 游标结束标记</span></div><div class="line">  <span class="keyword">DECLARE</span> CONTINUE <span class="keyword">HANDLER</span> <span class="keyword">FOR</span> <span class="keyword">SQLSTATE</span> <span class="string">'02000'</span> <span class="keyword">SET</span> s=<span class="number">1</span>;</div><div class="line">  </div><div class="line">	<span class="keyword">DECLARE</span> <span class="keyword">EXIT</span> <span class="keyword">HANDLER</span> <span class="keyword">FOR</span> SQLEXCEPTION <span class="keyword">ROLLBACK</span>;</div><div class="line">  <span class="comment">-- 参数</span></div><div class="line"> </div><div class="line">  <span class="keyword">SELECT</span> <span class="keyword">NOW</span>() <span class="keyword">INTO</span> c_time;</div><div class="line">  <span class="keyword">SELECT</span> <span class="keyword">UPPER</span>(<span class="keyword">REPLACE</span>(<span class="keyword">UUID</span>(),<span class="string">"-"</span>,<span class="string">""</span>)) <span class="keyword">INTO</span> uid;</div><div class="line">	<span class="keyword">START</span> <span class="keyword">TRANSACTION</span>;</div><div class="line">  <span class="comment">-- 主表</span></div><div class="line">  <span class="keyword">SELECT</span> uid;</div><div class="line">	<span class="keyword">INSERT</span> <span class="keyword">INTO</span> api_funny(<span class="keyword">id</span>,type_id,f_name,<span class="keyword">sequence</span>,icon,img,create_time,is_pure,<span class="string">`online`</span>,show_type)</div><div class="line">    <span class="keyword">SELECT</span> uid,type_id,f_name,<span class="keyword">sequence</span>,icon,img,<span class="keyword">NOW</span>(),is_pure,<span class="string">'1'</span>,<span class="string">'2'</span> <span class="keyword">FROM</span> <span class="string">`api_funny`</span> <span class="keyword">WHERE</span> <span class="keyword">id</span>=<span class="keyword">oid</span>;</div><div class="line">	  <span class="comment">-- img</span></div><div class="line">  OPEN cursor_img; </div><div class="line">  <span class="comment">-- 取游标数据到变量temp_id</span></div><div class="line">  fetch  cursor_img into temp_id;</div><div class="line">  <span class="comment">-- 循环</span></div><div class="line">  while s &lt;&gt; 1 do</div><div class="line">	<span class="comment">-- 执行操作</span></div><div class="line">	<span class="keyword">INSERT</span> <span class="keyword">INTO</span> api_funny_img(<span class="keyword">id</span>,funny_id,f_no,img_frame_from,img_frame_to,img_frame_all,img_frame_x,img_frame_y,img_frame_angle,img_frame_width,img_frame_height,create_time) </div><div class="line">		<span class="keyword">SELECT</span> <span class="keyword">UPPER</span>(<span class="keyword">REPLACE</span>(<span class="keyword">UUID</span>(),<span class="string">"-"</span>,<span class="string">""</span>)),uid,f_no,img_frame_from,img_frame_to,img_frame_all,img_frame_x,img_frame_y,img_frame_angle,img_frame_width,img_frame_height,c_time </div><div class="line">		<span class="keyword">FROM</span> api_funny_img <span class="keyword">WHERE</span> <span class="keyword">id</span>=temp_id;</div><div class="line">	fetch  cursor_img into temp_id;</div><div class="line">	<span class="keyword">end</span> <span class="keyword">while</span>;</div><div class="line">  <span class="comment">-- 关闭游标</span></div><div class="line">  CLOSE cursor_img;</div><div class="line"></div><div class="line">  <span class="comment">-- word</span></div><div class="line">  <span class="comment">-- 重置标记</span></div><div class="line">  <span class="keyword">SET</span> s=<span class="number">0</span>;</div><div class="line">  OPEN cursor_word; </div><div class="line">  fetch  cursor_word into temp_id;</div><div class="line">  while s &lt;&gt; 1 do</div><div class="line">		<span class="keyword">INSERT</span> <span class="keyword">INTO</span> api_funny_word(<span class="keyword">id</span>,funny_id,f_no,word,word_frame_from,word_frame_to,word_frame_all,word_frame_x,word_frame_y,word_frame_angle,word_frame_width,word_frame_height,word_color,word_align,create_time)</div><div class="line">			<span class="keyword">SELECT</span> <span class="keyword">UPPER</span>(<span class="keyword">REPLACE</span>(<span class="keyword">UUID</span>(),<span class="string">"-"</span>,<span class="string">""</span>)),uid,f_no,word,word_frame_from,word_frame_to,word_frame_all,word_frame_x,word_frame_y,word_frame_angle,word_frame_width,word_frame_height,word_color,word_align,c_time </div><div class="line">			<span class="keyword">FROM</span> api_funny_word <span class="keyword">WHERE</span> <span class="keyword">id</span>=temp_id;</div><div class="line">		fetch  cursor_word into temp_id;</div><div class="line">  <span class="keyword">end</span> <span class="keyword">while</span>;  </div><div class="line">  CLOSE cursor_word;</div><div class="line"></div><div class="line">	<span class="keyword">COMMIT</span>;</div><div class="line"> </div><div class="line"><span class="keyword">END</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;为了处理老数据，从一张父表，两张子表复制数据。涉及到生成id关联以及子表多条记录复制，使用了存储过程，cursor遍历结果集。&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://aimigit.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="mysql" scheme="http://aimigit.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>java对Gif图片合成文字</title>
    <link href="http://aimigit.github.io/2018/04/12/java-gif-image/"/>
    <id>http://aimigit.github.io/2018/04/12/java-gif-image/</id>
    <published>2018-04-12T08:19:55.000Z</published>
    <updated>2018-04-12T09:53:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Gif概述"><a href="#Gif概述" class="headerlink" title="Gif概述"></a>Gif概述</h2><p>GIF(Graphics Interchange Format)的原义是“图像互换格式”，是CompuServe公司在 1987 年开发的图像文件格式。GIF文件的数据，是一种基于LZW算法的连续色调的无损压缩格式。其压缩率一般在50%左右，它不属于任何应用程序。GIF格式可以存多幅彩色图像，如果把存于一个文件中的多幅图像数据逐幅读出并显示到屏幕上，就可构成一种最简单的动画。<br>GIF格式自1987年由CompuServe公司引入后，因其体积小、成像相对清晰，特别适合于初期慢速的互联网，而大受欢迎。<br>目前网络上流行的动图表情包，以Gif格式为主。大概原理是多张连续图片，以一定的时间间隔轮播，形成每帧动画效果。<br>要在Gif图片上加文字，就要在每帧的相同位置，画上文字。</p>
<h2 id="java-画图"><a href="#java-画图" class="headerlink" title="java 画图"></a>java 画图</h2><p>使用了第三方文件  LZWEncoder.java,NeuQuant.java,GifDecoder.java,AnimatedGifEncoder.java</p>
<a id="more"></a>    
<h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">  * </span></div><div class="line"><span class="comment">  * <span class="doctag">@Title</span>: gifWord </span></div><div class="line"><span class="comment">  * <span class="doctag">@Description</span>: 动态图加文字</span></div><div class="line"><span class="comment">  * <span class="doctag">@param</span> path</span></div><div class="line"><span class="comment">  * <span class="doctag">@param</span> destImageFile</span></div><div class="line"><span class="comment">  * <span class="doctag">@param</span> word 文字</span></div><div class="line"><span class="comment">  * <span class="doctag">@param</span> x x坐标</span></div><div class="line"><span class="comment">  * <span class="doctag">@param</span> y y坐标</span></div><div class="line"><span class="comment">  * <span class="doctag">@param</span> fontColor #FFFFFF 颜色</span></div><div class="line"><span class="comment">  * <span class="doctag">@param</span> fontSize 文字大小</span></div><div class="line"><span class="comment">  * <span class="doctag">@throws</span> IOException</span></div><div class="line"><span class="comment">  */</span></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">gifWord</span><span class="params">(String path,String destImageFile,String word,<span class="keyword">int</span> x,<span class="keyword">int</span> y,String fontColor,<span class="keyword">int</span> fontSize)</span> <span class="keyword">throws</span> IOException</span>&#123;</div><div class="line">	  GifDecoder decoder = <span class="keyword">new</span> GifDecoder();</div><div class="line">      decoder.read(path);  </div><div class="line">      <span class="keyword">int</span> n = decoder.getFrameCount(); <span class="comment">//得到frame的个数  </span></div><div class="line">      </div><div class="line">      AnimatedGifEncoder animatedGifEncoder = <span class="keyword">new</span> AnimatedGifEncoder();</div><div class="line">      <span class="comment">//重复播放</span></div><div class="line">      animatedGifEncoder.setRepeat(<span class="number">0</span>); </div><div class="line">      <span class="comment">//设置要替换成透明的颜色,去黑底</span></div><div class="line"><span class="comment">//      animatedGifEncoder.setTransparent(Color.black);</span></div><div class="line">      animatedGifEncoder.start(destImageFile);</div><div class="line">  		 </div><div class="line">      Color color=toColorFromString(fontColor);</div><div class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</div><div class="line">    	  <span class="comment">//得到帧  </span></div><div class="line">          BufferedImage frame = decoder.getFrame(i); </div><div class="line">          <span class="comment">//透明底转白底</span></div><div class="line">          frame= frameTransparentConvert(frame);</div><div class="line">          <span class="comment">//文字设置</span></div><div class="line">          createFont( frame, word,x,y,color,fontSize);</div><div class="line">          <span class="comment">//得到延迟时间  </span></div><div class="line">          <span class="keyword">int</span> delay = decoder.getDelay(i); </div><div class="line">          animatedGifEncoder.setDelay(delay); <span class="comment">//设置播放的延迟时间  </span></div><div class="line">          animatedGifEncoder.addFrame(frame);  <span class="comment">//添加到帧中  </span></div><div class="line">      &#125;  </div><div class="line">      animatedGifEncoder.finish(); </div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  </div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * </span></div><div class="line"><span class="comment">   * <span class="doctag">@Title</span>: jpgWord </span></div><div class="line"><span class="comment">   * <span class="doctag">@Description</span>: 静态图加文字</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> path</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> destImageFile</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> word</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> x</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> y</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> fontColor</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> fontSize</span></div><div class="line"><span class="comment">   * <span class="doctag">@throws</span> IOException</span></div><div class="line"><span class="comment">   */</span></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">jpgWord</span><span class="params">(String path,String destImageFile,String word,<span class="keyword">int</span> x,<span class="keyword">int</span> y,String fontColor,<span class="keyword">int</span> fontSize)</span> <span class="keyword">throws</span> IOException</span>&#123;</div><div class="line">	  File img = <span class="keyword">new</span> File(path);</div><div class="line">      BufferedImage frame = ImageIO.read(img);</div><div class="line">      <span class="comment">//文字设置</span></div><div class="line">      Color color=toColorFromString(fontColor);</div><div class="line">      createFont( frame, word,x,y,color,fontSize);</div><div class="line">      ImageIO.write((BufferedImage) frame,  <span class="string">"gif"</span>, <span class="keyword">new</span> File(destImageFile));</div><div class="line">  &#125;</div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * </span></div><div class="line"><span class="comment">   * <span class="doctag">@Title</span>: frameTransparentConvert </span></div><div class="line"><span class="comment">   * <span class="doctag">@Description</span>: 透明加白色底</span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> bufferedImage</span></div><div class="line"><span class="comment">   * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">   */</span></div><div class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> BufferedImage <span class="title">frameTransparentConvert</span><span class="params">(BufferedImage bufferedImage)</span></span>&#123;</div><div class="line">	  BufferedImage im = <span class="keyword">new</span> BufferedImage(bufferedImage.getWidth(), bufferedImage.getHeight(), BufferedImage.TYPE_4BYTE_ABGR);</div><div class="line">	  Graphics2D g = im.createGraphics();</div><div class="line">	  g.setColor(Color.white); </div><div class="line">	  g.fillRect(<span class="number">0</span>, <span class="number">0</span>, bufferedImage.getWidth(), bufferedImage.getHeight());</div><div class="line">	  g.drawImage(bufferedImage, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">null</span>);</div><div class="line">	  <span class="keyword">return</span> im;</div><div class="line">  &#125;</div><div class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createFont</span><span class="params">(BufferedImage bufferedImage,String word,<span class="keyword">int</span> x,<span class="keyword">int</span> y,Color fontColor,<span class="keyword">int</span> fontSize )</span> </span>&#123;</div><div class="line">	  </div><div class="line">	  <span class="keyword">try</span> &#123;</div><div class="line">          Graphics2D g = bufferedImage.createGraphics();</div><div class="line">          </div><div class="line"><span class="comment">//          File file = new File(fontPath);  //字体文件</span></div><div class="line"><span class="comment">//          Font font = Font.createFont(Font.TRUETYPE_FONT, file); //根据字体文件所在位置,创建新的字体对象(此语句在jdk1.5下面才支持)  </span></div><div class="line">          Font font=<span class="keyword">new</span> Font(<span class="string">"微软雅黑"</span>,Font.BOLD,fontSize); </div><div class="line">          g.setFont(font);</div><div class="line">          <span class="comment">//字的颜色</span></div><div class="line">          g.setColor(fontColor);  </div><div class="line">          <span class="comment">//字数</span></div><div class="line">          <span class="keyword">int</span> wordNum=word.length();</div><div class="line">          <span class="keyword">int</span> imgWidth=bufferedImage.getWidth();</div><div class="line">          <span class="keyword">int</span> imgHeight=bufferedImage.getHeight();</div><div class="line">          </div><div class="line">          </div><div class="line">          <span class="comment">/* 分行，计算各行文字内容 */</span></div><div class="line">          FontMetrics m = g.getFontMetrics();</div><div class="line">          <span class="keyword">int</span> fontHeight = m.getAscent() + m.getDescent();</div><div class="line">          <span class="keyword">int</span> lineWidth = imgWidth-x;</div><div class="line">		  <span class="keyword">char</span>[] chars = word.toCharArray();</div><div class="line">		  List&lt;String&gt; rows = <span class="keyword">new</span> ArrayList&lt;String&gt;();</div><div class="line">		  <span class="keyword">int</span> fromIndex = <span class="number">0</span>;</div><div class="line">		  <span class="keyword">int</span> strWidth = <span class="number">0</span>;</div><div class="line">		  <span class="comment">// 逐个字符累加计算长度,超过行宽,自动换行</span></div><div class="line">		  <span class="keyword">for</span> (<span class="keyword">int</span> bgn = <span class="number">0</span>; bgn &lt; word.length();) &#123;</div><div class="line">			  strWidth += m.charWidth(chars[bgn]);</div><div class="line">		</div><div class="line">			  <span class="keyword">if</span> (strWidth &gt; lineWidth) &#123;</div><div class="line">			  	  rows.add(word.substring(fromIndex, bgn));</div><div class="line">				  strWidth = <span class="number">0</span>;</div><div class="line">				  fromIndex = bgn;</div><div class="line">			  &#125; <span class="keyword">else</span>&#123;</div><div class="line">				  bgn++;</div><div class="line">			  &#125;</div><div class="line">		  &#125;</div><div class="line">		<span class="comment">// 加上最后一行</span></div><div class="line">		<span class="keyword">if</span> (fromIndex &lt; word.length()) </div><div class="line">			rows.add(word.substring(fromIndex, word.length()));</div><div class="line">		String element;</div><div class="line">		<span class="comment">//根据计算出的行数绘制</span></div><div class="line">		<span class="keyword">for</span> (Iterator iter = rows.iterator(); iter.hasNext();) &#123;</div><div class="line">			element = (String) iter.next();</div><div class="line">			<span class="comment">/* 绘制字符串 */</span></div><div class="line">			g.drawString(element, (<span class="keyword">float</span>) x, (<span class="keyword">float</span>) (y + m.getAscent()));</div><div class="line">			y += fontHeight;</div><div class="line">		&#125;</div><div class="line">			</div><div class="line">          g.dispose();</div><div class="line">          </div><div class="line">      &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">          e.printStackTrace();</div><div class="line">      &#125;</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  <span class="comment">/** </span></div><div class="line"><span class="comment">   * 字符串转换成Color对象 </span></div><div class="line"><span class="comment">   * <span class="doctag">@param</span> colorStr 16进制颜色字符串 </span></div><div class="line"><span class="comment">   * <span class="doctag">@return</span> Color对象 </span></div><div class="line"><span class="comment">   * */</span>  </div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Color <span class="title">toColorFromString</span><span class="params">(String colorStr)</span></span>&#123;  </div><div class="line">	  String strR = colorStr.substring(<span class="number">1</span>,<span class="number">3</span>);  </div><div class="line">      String strG = colorStr.substring(<span class="number">3</span>,<span class="number">5</span>);  </div><div class="line">      String strB = colorStr.substring(<span class="number">5</span>,<span class="number">7</span>);  </div><div class="line">      <span class="keyword">int</span> r = Integer.parseInt(strR,<span class="number">16</span>);  </div><div class="line">      <span class="keyword">int</span> g = Integer.parseInt(strG,<span class="number">16</span>);  </div><div class="line">      <span class="keyword">int</span> b = Integer.parseInt(strB,<span class="number">16</span>);  </div><div class="line">      Color color =  <span class="keyword">new</span> Color(r,g,b) ;  </div><div class="line">      <span class="keyword">return</span> color;  </div><div class="line">  &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Gif概述&quot;&gt;&lt;a href=&quot;#Gif概述&quot; class=&quot;headerlink&quot; title=&quot;Gif概述&quot;&gt;&lt;/a&gt;Gif概述&lt;/h2&gt;&lt;p&gt;GIF(Graphics Interchange Format)的原义是“图像互换格式”，是CompuServe公司在 1987 年开发的图像文件格式。GIF文件的数据，是一种基于LZW算法的连续色调的无损压缩格式。其压缩率一般在50%左右，它不属于任何应用程序。GIF格式可以存多幅彩色图像，如果把存于一个文件中的多幅图像数据逐幅读出并显示到屏幕上，就可构成一种最简单的动画。&lt;br&gt;GIF格式自1987年由CompuServe公司引入后，因其体积小、成像相对清晰，特别适合于初期慢速的互联网，而大受欢迎。&lt;br&gt;目前网络上流行的动图表情包，以Gif格式为主。大概原理是多张连续图片，以一定的时间间隔轮播，形成每帧动画效果。&lt;br&gt;要在Gif图片上加文字，就要在每帧的相同位置，画上文字。&lt;/p&gt;
&lt;h2 id=&quot;java-画图&quot;&gt;&lt;a href=&quot;#java-画图&quot; class=&quot;headerlink&quot; title=&quot;java 画图&quot;&gt;&lt;/a&gt;java 画图&lt;/h2&gt;&lt;p&gt;使用了第三方文件  LZWEncoder.java,NeuQuant.java,GifDecoder.java,AnimatedGifEncoder.java&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://aimigit.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="java" scheme="http://aimigit.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>linux添加字体</title>
    <link href="http://aimigit.github.io/2018/03/29/linux-add-font/"/>
    <id>http://aimigit.github.io/2018/03/29/linux-add-font/</id>
    <published>2018-03-29T09:16:37.000Z</published>
    <updated>2018-03-29T09:41:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>linux自带的字体比较少，在做图片文字合成时，需要指定的文字字体。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">查看系统中的字体</div><div class="line"><span class="built_in">fc</span>-list</div><div class="line">查看系统中的中文字体</div><div class="line"><span class="built_in">fc</span>-list :lang=zh</div><div class="line"></div><div class="line">[root@localhost ~]<span class="comment"># fc-list</span></div><div class="line">Bitstream Vera Sans Mono:style=Bold</div><div class="line">Bitstream Vera Sans:style=Oblique</div><div class="line">Bitstream Vera Sans:style=Roman</div><div class="line">Bitstream Vera Sans Mono:style=Oblique</div><div class="line">Bitstream Vera Sans:style=Bold</div><div class="line">Bitstream Vera Serif:style=Roman</div><div class="line">Bitstream Vera Sans Mono:style=Bold Oblique</div><div class="line">Bitstream Vera Sans:style=Bold Oblique</div><div class="line">文鼎PL中楷Uni,AR PL ZenKai Uni:style=Medium</div><div class="line">Bitstream Vera Sans Mono:style=Roman</div><div class="line">Fixed:style=Regular</div><div class="line">文鼎PL细上海宋Uni,AR PL ShanHeiSun Uni,文鼎PL細上海宋Uni:style=Regular</div><div class="line">Bitstream Vera Serif:style=Bold</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h2 id="安装新字体"><a href="#安装新字体" class="headerlink" title="安装新字体"></a>安装新字体</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># cd  /usr/share/fonts</span></div><div class="line">[root@localhost fonts]<span class="comment"># mkdir win</span></div><div class="line">[root@localhost fonts]<span class="comment"># cd win</span></div><div class="line">把需要安装的字体放到目录后，执行下面命令</div><div class="line">[root@localhost win]<span class="comment"># mkfontscale </span></div><div class="line">[root@localhost win]<span class="comment"># mkfontdir</span></div><div class="line">[root@localhost win]<span class="comment"># fc-list</span></div><div class="line">Bitstream Vera Sans Mono:style=Bold</div><div class="line">Bitstream Vera Sans:style=Oblique</div><div class="line">Bitstream Vera Sans:style=Roman</div><div class="line">微软雅黑,Microsoft YaHei:style=Regular,Normal,obyčejné,Standard,Κανονικά,Normaali,Normál,Normale,Standaard,Normalny,Обычный,Normálne,Navadno,Arrunta</div><div class="line">Bitstream Vera Sans Mono:style=Oblique</div><div class="line">Bitstream Vera Sans:style=Bold</div><div class="line">Bitstream Vera Serif:style=Roman</div><div class="line">Bitstream Vera Sans Mono:style=Bold Oblique</div><div class="line">Bitstream Vera Sans:style=Bold Oblique</div><div class="line">文鼎PL中楷Uni,AR PL ZenKai Uni:style=Medium</div><div class="line">Bitstream Vera Sans Mono:style=Roman</div><div class="line">微软雅黑,Microsoft YaHei:style=Bold,Negreta,tučné,fed,Fett,Έντονα,Negrita,Lihavoitu,Gras,Félkövér,Grassetto,Vet,Halvfet,Pogrubiony,Negrito,Полужирный,Fet,Kalın,Krepko,Lodia</div><div class="line">Fixed:style=Regular</div><div class="line">文鼎PL细上海宋Uni,AR PL ShanHeiSun Uni,文鼎PL細上海宋Uni:style=Regular</div><div class="line">Bitstream Vera Serif:style=Bold</div><div class="line">可以看到增加了微软雅黑字体。</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;linux自带的字体比较少，在做图片文字合成时，需要指定的文字字体。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;查看系统中的字体&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;fc&lt;/span&gt;-list&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;查看系统中的中文字体&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;fc&lt;/span&gt;-list :lang=zh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@localhost ~]&lt;span class=&quot;comment&quot;&gt;# fc-list&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Bitstream Vera Sans Mono:style=Bold&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Bitstream Vera Sans:style=Oblique&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Bitstream Vera Sans:style=Roman&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Bitstream Vera Sans Mono:style=Oblique&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Bitstream Vera Sans:style=Bold&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Bitstream Vera Serif:style=Roman&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Bitstream Vera Sans Mono:style=Bold Oblique&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Bitstream Vera Sans:style=Bold Oblique&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;文鼎PL中楷Uni,AR PL ZenKai Uni:style=Medium&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Bitstream Vera Sans Mono:style=Roman&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Fixed:style=Regular&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;文鼎PL细上海宋Uni,AR PL ShanHeiSun Uni,文鼎PL細上海宋Uni:style=Regular&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Bitstream Vera Serif:style=Bold&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://aimigit.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="linux" scheme="http://aimigit.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>html跳转页面小技巧</title>
    <link href="http://aimigit.github.io/2018/01/17/html-jump/"/>
    <id>http://aimigit.github.io/2018/01/17/html-jump/</id>
    <published>2018-01-17T08:58:22.000Z</published>
    <updated>2018-01-23T08:44:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="html的实现"><a href="#html的实现" class="headerlink" title="html的实现"></a>html的实现</h2><p>优点：简单<br>缺点：Struts Tiles中无法使用</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 以下方式只是刷新不跳转到其他页面 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"refresh"</span> <span class="attr">content</span>=<span class="string">"10"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 以下方式定时转到其他页面 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"refresh"</span> <span class="attr">content</span>=<span class="string">"5;url=hello.html"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div></pre></td></tr></table></figure>
<a id="more"></a>    
<h2 id="javascript的实现"><a href="#javascript的实现" class="headerlink" title="javascript的实现"></a>javascript的实现</h2><p>优点：灵活，可以结合更多的其他功能<br>缺点：受到不同浏览器的影响<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;script language=<span class="string">"javascript"</span> type=<span class="string">"text/javascript"</span>&gt; </div><div class="line"><span class="comment">// 以下方式直接跳转</span></div><div class="line"><span class="built_in">window</span>.location.href=<span class="string">'hello.html'</span>;</div><div class="line"><span class="comment">// 以下方式定时跳转</span></div><div class="line">setTimeout(<span class="string">"javascript:location.href='hello.html'"</span>, <span class="number">5000</span>); </div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="正则获取get请求参数"><a href="#正则获取get请求参数" class="headerlink" title="正则获取get请求参数"></a>正则获取get请求参数</h2><p>html并没有对http请求的处理，不像jsp，php，python。但是我们可以用正则表达式提取参数。<br>缺点：只能处理get请求<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetQueryString</span>(<span class="params">name</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">     <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^|&amp;)"</span>+ name +<span class="string">"=([^&amp;]*)(&amp;|$)"</span>);</div><div class="line">     <span class="keyword">var</span> r = <span class="built_in">window</span>.location.search.substr(<span class="number">1</span>).match(reg);</div><div class="line">     <span class="keyword">if</span>(r!=<span class="literal">null</span>)<span class="keyword">return</span>  <span class="built_in">unescape</span>(r[<span class="number">2</span>]); <span class="keyword">return</span> <span class="literal">null</span>;</div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="comment">// 调用方法</span></div><div class="line">alert(GetQueryString(<span class="string">"参数名1"</span>));</div><div class="line">alert(GetQueryString(<span class="string">"参数名2"</span>));</div></pre></td></tr></table></figure></p>
<h2 id="正则构造startWith，endWith方法"><a href="#正则构造startWith，endWith方法" class="headerlink" title="正则构造startWith，endWith方法"></a>正则构造startWith，endWith方法</h2><p>javascript 没有原生的这2个方法，一般用indexOf判断，<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//或者用indexOf判断</span></div><div class="line"><span class="keyword">var</span> index = str.indexOf(<span class="string">'abc'</span>);</div><div class="line"><span class="keyword">if</span>(index==<span class="number">0</span>)&#123;</div><div class="line"><span class="comment">//以'abc'开头</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>我们也可以自己构造。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">String</span>.prototype.startWith=<span class="function"><span class="keyword">function</span>(<span class="params">str</span>)</span>&#123;     </div><div class="line">  <span class="keyword">var</span> reg=<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"^"</span>+str);     </div><div class="line">  <span class="keyword">return</span> reg.test(<span class="keyword">this</span>);        </div><div class="line">&#125;  </div><div class="line"></div><div class="line"><span class="built_in">String</span>.prototype.endWith=<span class="function"><span class="keyword">function</span>(<span class="params">str</span>)</span>&#123;     </div><div class="line">  <span class="keyword">var</span> reg=<span class="keyword">new</span> <span class="built_in">RegExp</span>(str+<span class="string">"$"</span>);     </div><div class="line">  <span class="keyword">return</span> reg.test(<span class="keyword">this</span>);        </div><div class="line">&#125;</div><div class="line"><span class="comment">//或者用indexOf判断</span></div><div class="line"><span class="keyword">var</span> index = str.indexOf(<span class="string">'abc'</span>);</div><div class="line"><span class="keyword">if</span>(index==<span class="number">0</span>)&#123;</div><div class="line"><span class="comment">//以'abc'开头</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="正则转换回车换行符"><a href="#正则转换回车换行符" class="headerlink" title="正则转换回车换行符"></a>正则转换回车换行符</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">convertCRLF</span>(<span class="params">str</span>)</span>&#123;</div><div class="line">	<span class="keyword">if</span>(str!=<span class="literal">null</span>)</div><div class="line">	str = str.replace(<span class="regexp">/[\n]/g</span>,<span class="string">"&lt;br&gt;"</span>)</div><div class="line">	<span class="keyword">return</span> str;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;html的实现&quot;&gt;&lt;a href=&quot;#html的实现&quot; class=&quot;headerlink&quot; title=&quot;html的实现&quot;&gt;&lt;/a&gt;html的实现&lt;/h2&gt;&lt;p&gt;优点：简单&lt;br&gt;缺点：Struts Tiles中无法使用&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 以下方式只是刷新不跳转到其他页面 --&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;refresh&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;10&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 以下方式定时转到其他页面 --&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;refresh&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;5;url=hello.html&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://aimigit.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="html5" scheme="http://aimigit.github.io/tags/html5/"/>
    
  </entry>
  
  <entry>
    <title>nginx_worker_connections异常</title>
    <link href="http://aimigit.github.io/2017/12/07/nginx-worker-connections/"/>
    <id>http://aimigit.github.io/2017/12/07/nginx-worker-connections/</id>
    <published>2017-12-07T07:14:31.000Z</published>
    <updated>2017-12-07T07:28:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="异常信息"><a href="#异常信息" class="headerlink" title="异常信息"></a>异常信息</h2><p>[alert] 14102#0: 1024 worker_connections are not enough</p>
<p>worker_connections 参数默认1024，不够用的话配置大一些，同时小于worker_rlimit_nofile 参数值。<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#worker进程数，通常设置等同于CPU数量，auto为自动检测</span></div><div class="line"><span class="attribute">worker_processes</span>  auto;</div><div class="line"><span class="comment">#worker进程打开最大文件数，可CPU*10000设置</span></div><div class="line"><span class="attribute">worker_rlimit_nofile</span> <span class="number">100000</span>;</div><div class="line"></div><div class="line"><span class="section">events</span> &#123;</div><div class="line">    <span class="attribute">worker_connections</span>  <span class="number">10240</span>;</div><div class="line">   <span class="comment">#告诉nginx收到一个新链接通知后接受尽可能多的链接</span></div><div class="line">    <span class="attribute">multi_accept</span> <span class="literal">on</span>;</div><div class="line">   <span class="comment">#设置用于复用客户端线程的轮训方法</span></div><div class="line">   <span class="attribute">use</span> <span class="literal">epoll</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<a id="more"></a>    
<h2 id="linux打开文件数配置"><a href="#linux打开文件数配置" class="headerlink" title="linux打开文件数配置"></a>linux打开文件数配置</h2><p>调大open files参数值<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">[delvep@localhost ~]$ <span class="built_in">ulimit</span> -a</div><div class="line">core file size          (blocks, -c) 0</div><div class="line">data seg size           (kbytes, -d) unlimited</div><div class="line">scheduling priority             (-e) 0</div><div class="line">file size               (blocks, -f) unlimited</div><div class="line">pending signals                 (-i) 77824</div><div class="line">max locked memory       (kbytes, -l) 32</div><div class="line">max memory size         (kbytes, -m) unlimited</div><div class="line">open files                      (-n) 65535</div><div class="line">pipe size            (512 bytes, -p) 8</div><div class="line">POSIX message queues     (bytes, -q) 819200</div><div class="line">real-time priority              (-r) 0</div><div class="line">stack size              (kbytes, -s) 10240</div><div class="line">cpu time               (seconds, -t) unlimited</div><div class="line">max user processes              (-u) 77824</div><div class="line">virtual memory          (kbytes, -v) unlimited</div><div class="line">file locks                      (-x) unlimited</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;异常信息&quot;&gt;&lt;a href=&quot;#异常信息&quot; class=&quot;headerlink&quot; title=&quot;异常信息&quot;&gt;&lt;/a&gt;异常信息&lt;/h2&gt;&lt;p&gt;[alert] 14102#0: 1024 worker_connections are not enough&lt;/p&gt;
&lt;p&gt;worker_connections 参数默认1024，不够用的话配置大一些，同时小于worker_rlimit_nofile 参数值。&lt;br&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#worker进程数，通常设置等同于CPU数量，auto为自动检测&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;worker_processes&lt;/span&gt;  auto;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#worker进程打开最大文件数，可CPU*10000设置&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;worker_rlimit_nofile&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;100000&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;events&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;worker_connections&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;10240&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;#告诉nginx收到一个新链接通知后接受尽可能多的链接&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;multi_accept&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;on&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;#设置用于复用客户端线程的轮训方法&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;attribute&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;epoll&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://aimigit.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="nginx" scheme="http://aimigit.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>nginx-http图片服务器配置</title>
    <link href="http://aimigit.github.io/2017/11/30/nginx-image-server/"/>
    <id>http://aimigit.github.io/2017/11/30/nginx-image-server/</id>
    <published>2017-11-30T08:57:57.000Z</published>
    <updated>2017-11-30T09:12:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="nginx-常用命令"><a href="#nginx-常用命令" class="headerlink" title="nginx 常用命令"></a>nginx 常用命令</h2><p>前面写nginx做反向代理，负载均衡的配置。本文写nginx做http服务器的配置，把静态文件都交给nginx管理。</p>
<ul>
<li>nginx   启动</li>
<li>nginx   -c /etc/nginx/nginx.conf  指定配置文件启动</li>
<li>nginx -s stop  关闭</li>
<li>nginx -t  检测配置文件</li>
<li>nginx -s reload 重载配置文件</li>
</ul>
<a id="more"></a>    
<h2 id="配置文件nginx-conf例子参考"><a href="#配置文件nginx-conf例子参考" class="headerlink" title="配置文件nginx.conf例子参考"></a>配置文件nginx.conf例子参考</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">user</span>  webuser;</div><div class="line"></div><div class="line"><span class="comment">#worker进程数，通常设置等同于CPU数量，auto为自动检测</span></div><div class="line"><span class="attribute">worker_processes</span>  auto;</div><div class="line"><span class="comment">#worker进程打开最大文件数，可CPU*10000设置</span></div><div class="line"><span class="attribute">worker_rlimit_nofile</span> <span class="number">100000</span>;</div><div class="line"></div><div class="line"><span class="comment">#error_log  logs/error.log;</span></div><div class="line"><span class="attribute">error_log</span>  logs/error.log  <span class="literal">notice</span>;</div><div class="line"><span class="comment">#error_log  logs/error.log  info;</span></div><div class="line"><span class="comment">#error_log  logs/error.log  error;</span></div><div class="line"></div><div class="line"><span class="attribute">pid</span>        logs/nginx.pid;</div><div class="line"></div><div class="line"></div><div class="line"><span class="section">events</span> &#123;</div><div class="line">    <span class="attribute">worker_connections</span>  <span class="number">10240</span>;</div><div class="line">   <span class="comment">#告诉nginx收到一个新链接通知后接受尽可能多的链接</span></div><div class="line">    <span class="attribute">multi_accept</span> <span class="literal">on</span>;</div><div class="line">   <span class="comment">#设置用于复用客户端线程的轮训方法</span></div><div class="line">   <span class="attribute">use</span> <span class="literal">epoll</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="section">http</span> &#123;</div><div class="line">    <span class="attribute">include</span>       mime.types;</div><div class="line">    <span class="attribute">default_type</span>  application/octet-stream;</div><div class="line"></div><div class="line">    <span class="attribute">log_format</span>  main  <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></div><div class="line">                      <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></div><div class="line">                      <span class="string">'"<span class="variable">$http_user_agent</span>" "<span class="variable">$http_x_forwarded_for</span>"'</span>;</div><div class="line">   </div><div class="line">    <span class="comment">#设置nginx是否存储访问日志，关闭这个可以让读取磁盘IO操作更快</span></div><div class="line">    <span class="comment">#access_log  logs/access.log  main;</span></div><div class="line">    <span class="comment">#优化磁盘IO设置，指定nginx是否调用sendfile函数来输出文件，普通应用设为on，下载等磁盘IO高的应用，可设为off</span></div><div class="line">    <span class="attribute">sendfile</span>        <span class="literal">off</span>;</div><div class="line">    <span class="comment">#tcp_nopush     on;</span></div><div class="line"></div><div class="line">    <span class="comment">#keepalive_timeout  0;</span></div><div class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">30</span>;</div><div class="line">    <span class="comment">#设置用户保存各种key的共享内存的参数，5m指的是5兆</span></div><div class="line">    <span class="attribute">limit_conn_zone</span> <span class="variable">$binary_remote_addr</span> zone=addr:<span class="number">5m</span>;</div><div class="line">    <span class="comment">#为给定的key设置最大的连接数，这里的key是addr，设定的值是100，就是说允许每一个IP地址最多同时打开100个连接</span></div><div class="line">    <span class="attribute">limit_conn</span> addr <span class="number">100</span>;</div><div class="line">   </div><div class="line">    <span class="comment">#gzip  on;</span></div><div class="line">    <span class="comment">#gzip_disable "MSIE [1-6]."; </span></div><div class="line">    <span class="comment">#开发缓存的同时也指定了缓存文件的最大数量，20s如果文件没有请求则删除缓存</span></div><div class="line">    <span class="attribute">open_file_cache</span> max=<span class="number">100000</span> inactive=<span class="number">20s</span>;</div><div class="line">    <span class="comment">#指多长时间检查一次缓存的有效信息</span></div><div class="line">    <span class="attribute">open_file_cache_valid</span> <span class="number">60s</span>;</div><div class="line">    <span class="comment">#文件缓存最小的访问次数，只有访问超过5次的才会被缓存</span></div><div class="line">    <span class="attribute">open_file_cache_min_uses</span> <span class="number">5</span>;</div><div class="line">    <span class="comment">#当搜索一个文件时是否缓存错误信息</span></div><div class="line">    <span class="attribute">open_file_cache_errors</span> <span class="literal">on</span>;</div><div class="line"></div><div class="line">    <span class="comment">#允许客户端请求的最大单文件字节数</span></div><div class="line">    <span class="attribute">client_max_body_size</span> <span class="number">30m</span>;</div><div class="line">    <span class="comment">#冲区代理缓冲用户端请求的最大字节数</span></div><div class="line">    <span class="attribute">client_header_buffer_size</span> <span class="number">32k</span>;</div><div class="line"></div><div class="line">    <span class="section">server</span> &#123;</div><div class="line">        <span class="attribute">listen</span>       <span class="number">8181</span>;</div><div class="line">        <span class="attribute">server_name</span>  img1.wen.cn;</div><div class="line"></div><div class="line">        <span class="attribute">charset</span> UTF-<span class="number">8</span>;</div><div class="line"></div><div class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></div><div class="line">        <span class="comment">#网站静态资源（图片，js文件等）</span></div><div class="line">        <span class="attribute">location</span> <span class="regexp"> ^~/web/static/</span> &#123;</div><div class="line">            <span class="attribute">root</span> /home/webuser/webapps;</div><div class="line">            <span class="attribute">index</span>  index.html index.htm;</div><div class="line">            <span class="attribute">proxy_store</span> <span class="literal">on</span>;</div><div class="line">            <span class="attribute">proxy_temp_path</span> /home/webuser/webapps;</div><div class="line">            <span class="attribute">proxy_set_header</span> Host img1.web.cn;</div><div class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</div><div class="line">            <span class="attribute">if</span> ( !-e <span class="variable">$request_filename</span> ) &#123;   </div><div class="line">                 <span class="attribute">proxy_pass</span> http://117.11.11.87:8088;   </div><div class="line">             &#125; </div><div class="line">			<span class="comment">#缓存90天</span></div><div class="line">            <span class="attribute">expires</span> <span class="number">90d</span>;</div><div class="line">            <span class="attribute">access_log</span> <span class="literal">off</span>;</div><div class="line">        &#125;</div><div class="line">		<span class="comment">#网站其他请求</span></div><div class="line">         <span class="attribute">location</span> /web/&#123;</div><div class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</div><div class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</div><div class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</div><div class="line">            <span class="attribute">proxy_pass</span> http://www.web.cn:8080;</div><div class="line">            <span class="attribute">access_log</span> <span class="literal">off</span>;</div><div class="line">            </div><div class="line">         &#125; </div><div class="line">        <span class="attribute">location</span> /&#123;</div><div class="line">            <span class="attribute">root</span> /home/webuser/nginx-image/html;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        <span class="comment">#error_page  404              /404.html;</span></div><div class="line">        </div><div class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></div><div class="line">        <span class="comment">#</span></div><div class="line">        <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</div><div class="line">        <span class="attribute">location</span> = /50x.html &#123;</div><div class="line">            <span class="attribute">root</span>   html;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment"># deny access to .htaccess files, if Apache's document root</span></div><div class="line">        <span class="comment"># concurs with nginx's one</span></div><div class="line">        <span class="comment">#</span></div><div class="line">        <span class="comment">#location ~ /\.ht &#123;</span></div><div class="line">        <span class="comment">#    deny  all;</span></div><div class="line">        <span class="comment">#&#125;</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment"># another virtual host using mix of IP-, name-, and port-based configuration</span></div><div class="line">    <span class="comment">#</span></div><div class="line">    <span class="comment">#server &#123;</span></div><div class="line">    <span class="comment">#    listen       8000;</span></div><div class="line">    <span class="comment">#    listen       somename:8080;</span></div><div class="line">    <span class="comment">#    server_name  somename  alias  another.alias;</span></div><div class="line"></div><div class="line">    <span class="comment">#    location / &#123;</span></div><div class="line">    <span class="comment">#        root   html;</span></div><div class="line">    <span class="comment">#        index  index.html index.htm;</span></div><div class="line">    <span class="comment">#    &#125;</span></div><div class="line">    <span class="comment">#&#125;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment"># HTTPS server</span></div><div class="line">    <span class="comment">#</span></div><div class="line">    <span class="comment">#server &#123;</span></div><div class="line">    <span class="comment">#    listen       443 ssl;</span></div><div class="line">    <span class="comment">#    server_name  localhost;</span></div><div class="line"></div><div class="line">    <span class="comment">#    ssl_certificate      cert.pem;</span></div><div class="line">    <span class="comment">#    ssl_certificate_key  cert.key;</span></div><div class="line"></div><div class="line">    <span class="comment">#    ssl_session_cache    shared:SSL:1m;</span></div><div class="line">    <span class="comment">#    ssl_session_timeout  5m;</span></div><div class="line"></div><div class="line">    <span class="comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span></div><div class="line">    <span class="comment">#    ssl_prefer_server_ciphers  on;</span></div><div class="line"></div><div class="line">    <span class="comment">#    location / &#123;</span></div><div class="line">    <span class="comment">#        root   html;</span></div><div class="line">    <span class="comment">#        index  index.html index.htm;</span></div><div class="line">    <span class="comment">#    &#125;</span></div><div class="line">    <span class="comment">#&#125;</span></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;nginx-常用命令&quot;&gt;&lt;a href=&quot;#nginx-常用命令&quot; class=&quot;headerlink&quot; title=&quot;nginx 常用命令&quot;&gt;&lt;/a&gt;nginx 常用命令&lt;/h2&gt;&lt;p&gt;前面写nginx做反向代理，负载均衡的配置。本文写nginx做http服务器的配置，把静态文件都交给nginx管理。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nginx   启动&lt;/li&gt;
&lt;li&gt;nginx   -c /etc/nginx/nginx.conf  指定配置文件启动&lt;/li&gt;
&lt;li&gt;nginx -s stop  关闭&lt;/li&gt;
&lt;li&gt;nginx -t  检测配置文件&lt;/li&gt;
&lt;li&gt;nginx -s reload 重载配置文件&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://aimigit.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="nginx" scheme="http://aimigit.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>html手机打开qq客户端</title>
    <link href="http://aimigit.github.io/2017/11/24/html-to-qq/"/>
    <id>http://aimigit.github.io/2017/11/24/html-to-qq/</id>
    <published>2017-11-24T06:08:47.000Z</published>
    <updated>2017-11-24T06:39:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>一般网站会有客户qq，或者aap的html5页面有官方联系方式等，在用户点击qq号，直接打开qq客户端，会更方便友好。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"window.open('tencent://message/?uin=QQ号')"</span>&gt;</span>pc打开方式<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mqqapi://card/show_pslcard?src_type=internal&amp;version=1&amp;uin=qq号&amp;card_type=person&amp;source=qrcode"</span>&gt;</span>打开QQ<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mqqapi://card/show_pslcard?src_type=internal&amp;version=1&amp;uin=群号&amp;card_type=group&amp;source=qrcode"</span>&gt;</span>打开QQ群<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="微信打开网页不能下载app问题"><a href="#微信打开网页不能下载app问题" class="headerlink" title="微信打开网页不能下载app问题"></a>微信打开网页不能下载app问题</h2><p>微信对下载链接做了过滤处理，不能打开下载链接。目前处理方式，把app上传到应用宝，获取应用包的下载地址，作为app下载地址。（店大欺客）<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.location.href=<span class="string">"http://a.app.qq.com/o/simple.jsp?pkgname=com.xtone.emojikingdom"</span>;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;一般网站会有客户qq，或者aap的html5页面有官方联系方式等，在用户点击qq号，直接打开qq客户端，会更方便友好。&lt;/p&gt;
&lt;h2 id
    
    </summary>
    
    
      <category term="技术" scheme="http://aimigit.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="html5" scheme="http://aimigit.github.io/tags/html5/"/>
    
  </entry>
  
  <entry>
    <title>java-ehcache缓存技术</title>
    <link href="http://aimigit.github.io/2017/10/27/java-ehcache/"/>
    <id>http://aimigit.github.io/2017/10/27/java-ehcache/</id>
    <published>2017-10-27T08:31:42.000Z</published>
    <updated>2017-10-28T02:43:56.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>常见的三种缓存技术ehcache,memcache,redis。ehcache的特点是快速，轻量，memcache,redis主要用在分布式集群场景。ehcache快的原因是提供了堆栈缓存，直接存在jvm，程序直接调用。<br>由于不同版本的使用方式不同，本文主要讲ehcache 3.4.0使用方式。<br>官网：<a href="http://www.ehcache.org/" target="_blank" rel="external">http://www.ehcache.org/</a></p>
<h2 id="Ehcache支持的数据存储"><a href="#Ehcache支持的数据存储" class="headerlink" title="Ehcache支持的数据存储"></a>Ehcache支持的数据存储</h2><ul>
<li>On-Heap Store - 利用Java的堆栈内存来存储缓存条目。该层使用与Java应用程序相同的堆内存，所有这些都必须由JVM垃圾回收器进行扫描。JVM使用的堆空间越多，应用程序性能将受到垃圾回收暂停的影响越多。这个非常快，但通常是最有限的存储资源。</li>
<li>Off-Heap Store - 仅限可用的RAM限制。不受Java垃圾回收（GC）的约束。相当快，但比On-Heap Store慢，因为在存储和重新访问数据时，必须将数据移入和移出JVM堆。</li>
</ul>
<a id="more"></a>    
<ul>
<li>磁盘存储 - 使用磁盘（文件系统）来存储缓存条目。这种类型的存储资源通常非常丰富，但比基于RAM的慢得多。对于使用磁盘存储的所有应用程序，建议使用快速专用磁盘来优化吞吐量。</li>
<li>群集存储 - 此数据存储是远程服务器上的缓存。远程服务器可以可选地具有提供改进的高可用性的故障切换服务器。由于集群存储由于诸如网络延迟以及建立客户端/服务器一致性等因素而带来性能损失，因此本层本质上比本地非堆存储慢。</li>
</ul>
<p>4个级别，性能由快到慢，存储量由小到大。这里有几个注意，<br>On-Heap 的性能超快，但不能配置太大，会影响jvm资源回收。<br>Off-Heap 最大要低于服务器内存大小，同时要小于运行环境的大小，通过 -XX:MaxDirectMemorySize 参数配置。<br>磁盘存储，建议服务器使用SSD硬盘。<br>群集存储，是通过Terracotta Server 实现。</p>
<h2 id="使用方式1：java-类方式"><a href="#使用方式1：java-类方式" class="headerlink" title="使用方式1：java 类方式"></a>使用方式1：java 类方式</h2><ul>
<li>项目引入 ehcache-3.4.0.jar<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">	<span class="comment">// 构建一个缓存管理器</span></div><div class="line">	CacheManager cacheManager = CacheManagerBuilder.newCacheManagerBuilder().build(<span class="keyword">true</span>);</div><div class="line">	<span class="comment">// cacheManager.init();</span></div><div class="line">	<span class="comment">// cacheConfiguration -100个换成最大，缓存过期时间1分钟</span></div><div class="line">	CacheConfiguration&lt;String, String&gt; cacheConfiguration = CacheConfigurationBuilder</div><div class="line">			.newCacheConfigurationBuilder(String.class, String.class, ResourcePoolsBuilder.heap(<span class="number">100</span>).offheap(<span class="number">100</span>, MemoryUnit.MB))</div><div class="line">			.withExpiry(Expirations.timeToLiveExpiration(Duration.of(<span class="number">1</span>, TimeUnit.MINUTES  )))</div><div class="line">			.build();</div><div class="line">	<span class="comment">// 根据配置创建一个缓存容器</span></div><div class="line">	Cache&lt;String, String&gt; myCache = cacheManager.createCache(<span class="string">"myCache"</span>, cacheConfiguration);</div><div class="line">	myCache.put(<span class="string">"test"</span>, <span class="string">"hello Ehcache"</span>);</div><div class="line">	<span class="comment">// 循环直到数据过期 否包含该key</span></div><div class="line">	<span class="keyword">while</span> (myCache.containsKey(<span class="string">"test"</span>)) &#123;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			System.out.println(<span class="string">"值:"</span> + myCache.get(<span class="string">"test"</span>));</div><div class="line">			Thread.sleep(<span class="number">2000</span>);</div><div class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	System.out.println(<span class="string">"1缓存已过期"</span>);</div><div class="line">	System.out.println(<span class="string">"值:"</span> + myCache.get(<span class="string">"test"</span>));</div><div class="line">	<span class="comment">//关闭</span></div><div class="line">	cacheManager.close();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="使用方式2：xml方式"><a href="#使用方式2：xml方式" class="headerlink" title="使用方式2：xml方式"></a>使用方式2：xml方式</h2><ul>
<li>项目引入 ehcache-3.4.0.jar</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">config</span></span></div><div class="line"><span class="tag">	<span class="attr">xmlns:xsi</span>=<span class="string">'http://www.w3.org/2001/XMLSchema-instance'</span></span></div><div class="line"><span class="tag">	<span class="attr">xmlns</span>=<span class="string">'http://www.ehcache.org/v3'</span></span></div><div class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.ehcache.org/v3 http://www.ehcache.org/schema/ehcache-core.xsd"</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">cache</span> <span class="attr">alias</span>=<span class="string">"myDefault"</span>&gt;</span> </div><div class="line">	<span class="tag">&lt;<span class="name">key-type</span>&gt;</span>java.lang.String<span class="tag">&lt;/<span class="name">key-type</span>&gt;</span> </div><div class="line">	<span class="tag">&lt;<span class="name">value-type</span>&gt;</span>java.util.ArrayList<span class="tag">&lt;/<span class="name">value-type</span>&gt;</span></div><div class="line">	<span class="comment">&lt;!-- 生存周期 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">expiry</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">ttl</span> <span class="attr">unit</span>=<span class="string">"hours"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">ttl</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">expiry</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">resources</span>&gt;</span></div><div class="line">		<span class="comment">&lt;!-- 堆栈内存--&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">heap</span> <span class="attr">unit</span>=<span class="string">"entries"</span>&gt;</span>1000<span class="tag">&lt;/<span class="name">heap</span>&gt;</span> </div><div class="line">	   <span class="comment">&lt;!-- 堆外内存--&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">offheap</span> <span class="attr">unit</span>=<span class="string">"MB"</span>&gt;</span>100<span class="tag">&lt;/<span class="name">offheap</span>&gt;</span> </div><div class="line">	<span class="tag">&lt;/<span class="name">resources</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">cache</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">cache</span> <span class="attr">alias</span>=<span class="string">"myFast"</span>&gt;</span> </div><div class="line">	<span class="tag">&lt;<span class="name">key-type</span>&gt;</span>java.lang.String<span class="tag">&lt;/<span class="name">key-type</span>&gt;</span> </div><div class="line">	<span class="tag">&lt;<span class="name">value-type</span>&gt;</span>java.lang.String<span class="tag">&lt;/<span class="name">value-type</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">expiry</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">ttl</span> <span class="attr">unit</span>=<span class="string">"minutes"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">ttl</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">expiry</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">resources</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">heap</span> <span class="attr">unit</span>=<span class="string">"entries"</span>&gt;</span>2000<span class="tag">&lt;/<span class="name">heap</span>&gt;</span> </div><div class="line">	  <span class="tag">&lt;<span class="name">offheap</span> <span class="attr">unit</span>=<span class="string">"MB"</span>&gt;</span>50<span class="tag">&lt;/<span class="name">offheap</span>&gt;</span> </div><div class="line">	<span class="tag">&lt;/<span class="name">resources</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">cache</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;/<span class="name">config</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.test.cache;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.net.URL;</div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.ehcache.Cache;</div><div class="line"><span class="keyword">import</span> org.ehcache.CacheManager;</div><div class="line"><span class="keyword">import</span> org.ehcache.config.builders.CacheManagerBuilder;</div><div class="line"><span class="keyword">import</span> org.ehcache.xml.XmlConfiguration;</div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: MyCache </span></div><div class="line"><span class="comment"> * <span class="doctag">@Description</span>: ehcache缓存管理</span></div><div class="line"><span class="comment"> * <span class="doctag">@version</span>: V1.0  </span></div><div class="line"><span class="comment"> * <span class="doctag">@author</span>: CWQ</span></div><div class="line"><span class="comment"> * <span class="doctag">@date</span>: 2017年10月25日 下午5:09:12</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyCache</span> </span>&#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> CacheManager cacheManager;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> Cache&lt;String, ArrayList&gt; cache;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> Cache&lt;String, String&gt; cacheFast;</div><div class="line"></div><div class="line">	<span class="keyword">static</span> &#123;</div><div class="line">		<span class="keyword">if</span> (cacheManager == <span class="keyword">null</span>) &#123;</div><div class="line">			URL myUrl = MyCache.class.getResource(<span class="string">"/ehcache.xml"</span>);</div><div class="line">			XmlConfiguration xmlConfig = <span class="keyword">new</span> XmlConfiguration(myUrl);</div><div class="line">			cacheManager = CacheManagerBuilder.newCacheManager(xmlConfig);</div><div class="line">			cacheManager.init();</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (cache == <span class="keyword">null</span>) &#123;</div><div class="line">			cache = cacheManager.getCache(<span class="string">"myDefault"</span>, String.class, ArrayList.class);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (cacheFast == <span class="keyword">null</span>) &#123;</div><div class="line">			cacheFast = cacheManager.getCache(<span class="string">"myFast"</span>, String.class, String.class);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		ArrayList ls = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">		ls.add(<span class="string">"aa"</span>);</div><div class="line">		ls.add(<span class="string">"bb"</span>);</div><div class="line">		<span class="keyword">try</span> &#123;cache.put(<span class="string">"1"</span>, ls);</div><div class="line">			<span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</div><div class="line">				System.out.println(cache.get(<span class="string">"1"</span>));</div><div class="line">				</div><div class="line">				Thread.sleep(<span class="number">1000L</span>);</div><div class="line">				</div><div class="line">			&#125;</div><div class="line">		&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">			<span class="comment">// TODO Auto-generated catch block</span></div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line">		<span class="comment">// cacheManager.close();</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2种方式都可以，xml配置文件比较灵活，但是要注意xml格式严格按<a href="http://www.ehcache.org/schema/ehcache-core.xsd" target="_blank" rel="external">http://www.ehcache.org/schema/ehcache-core.xsd</a> 书写。<br>注意节点的顺序<br>key-type<br>value-type<br>expiry<br>eviction-advisor<br>loader-writer<br>listeners<br>resources OR heap<br>more …</p>
<h2 id="其他注意事项"><a href="#其他注意事项" class="headerlink" title="其他注意事项"></a>其他注意事项</h2><p><offheap unit="MB">100</offheap> 配置了堆外缓存，value-type 类型要serializer 的对象，通过序列化，在调用的时候，就从堆外拿进jvm。<br>空间不足的话，要配置 -XX:MaxDirectMemorySize，比如tomcat -Xms128M -Xmx512M -XX:PermSize=64M -XX:MaxPermSize=128M,默认用的-Xmx 参数。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;常见的三种缓存技术ehcache,memcache,redis。ehcache的特点是快速，轻量，memcache,redis主要用在分布式集群场景。ehcache快的原因是提供了堆栈缓存，直接存在jvm，程序直接调用。&lt;br&gt;由于不同版本的使用方式不同，本文主要讲ehcache 3.4.0使用方式。&lt;br&gt;官网：&lt;a href=&quot;http://www.ehcache.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.ehcache.org/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Ehcache支持的数据存储&quot;&gt;&lt;a href=&quot;#Ehcache支持的数据存储&quot; class=&quot;headerlink&quot; title=&quot;Ehcache支持的数据存储&quot;&gt;&lt;/a&gt;Ehcache支持的数据存储&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;On-Heap Store - 利用Java的堆栈内存来存储缓存条目。该层使用与Java应用程序相同的堆内存，所有这些都必须由JVM垃圾回收器进行扫描。JVM使用的堆空间越多，应用程序性能将受到垃圾回收暂停的影响越多。这个非常快，但通常是最有限的存储资源。&lt;/li&gt;
&lt;li&gt;Off-Heap Store - 仅限可用的RAM限制。不受Java垃圾回收（GC）的约束。相当快，但比On-Heap Store慢，因为在存储和重新访问数据时，必须将数据移入和移出JVM堆。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://aimigit.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="cache" scheme="http://aimigit.github.io/tags/cache/"/>
    
  </entry>
  
  <entry>
    <title>小米电视去广告</title>
    <link href="http://aimigit.github.io/2017/10/02/xiaomitv-adblock/"/>
    <id>http://aimigit.github.io/2017/10/02/xiaomitv-adblock/</id>
    <published>2017-10-02T13:57:12.000Z</published>
    <updated>2017-10-28T02:42:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概叙"><a href="#概叙" class="headerlink" title="概叙"></a>概叙</h2><p>小米系列的产品，刚开始主打发烧友，便宜又做工好，性价比高。陆陆续续买了不少小米的产品，主要考虑可以组网，做智能家居。<br>后面公司规模扩大，开始频繁投放广告，产品也变得平庸了。小米电视升级后，开机广告，暂停广告，关机也要广告，实在不能忍。<br>广告类型主要有2种，1个是电视平台的广告，开关机广告那些。另一个是视频播放里面的广告，类似优酷视频那种。<br>目前能去的是第一种，第二种会去的分享一下。</p>
<h2 id="去广告方法1"><a href="#去广告方法1" class="headerlink" title="去广告方法1"></a>去广告方法1</h2><p>家里路由器有网址屏蔽功能，直接把广告网址屏蔽，<br>“ad.xiaomi.com”,”ad1.xiaomi.com”,”ad.mi.com”添加进黑名单。<br>这个方式是从广告来源过滤，如果小米改了网址就失效了。</p>
<h2 id="方法2禁用广告app"><a href="#方法2禁用广告app" class="headerlink" title="方法2禁用广告app"></a>方法2禁用广告app</h2><a id="more"></a>
<p>动手能力强的，推荐用这种。直接连接电视，禁用广告相关app，但是不能乱杀，有开不了机的风险。<br>电视用的是android系统，可以理解为不能打电话的手机。我们不需要root。<br>准备2个软件</p>
<ul>
<li>电脑</li>
<li>adb工具</li>
<li><p>Debloater<br>在你的电脑安装以上2个软件，adb工具我直接用刷机精灵的adb命令行功能。</p>
</li>
<li><p>电脑和电视连接同一个路由，在同一个局域网。</p>
</li>
<li>查看电视的ip，比如192.168.1.5。</li>
<li>电视打开adb调试</li>
<li>电脑打开adb命令行,输入adb connnet 192.168.1.5，连接成功。</li>
<li>电脑打开Debloater，Read Device Packages，这时候可以看到所有安装的app</li>
<li>禁用</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">com.miui.systemAdSolution  广告</div><div class="line">com.xiaomi.mitv.advertise  开屏广告</div><div class="line">com.xiaomi.mitv.assistant.manual</div><div class="line">com.xiaomi.mitv.tvpush.tvpushservice</div><div class="line">com.xiaomi.tv.appupgrade  应用升级</div><div class="line">com.xiaomi.mitv.upgrade  系统升级</div><div class="line">com.miui.cloudservice</div></pre></td></tr></table></figure>
<p>然后关机，重新开机，系统广告消息了，心情很爽，同事关闭了升级，不会被强制升级。<br>还能禁用更多，网上有精简列表，有兴趣的自行研究，千万不要禁用关键app，电视会启动不了。</p>
<h2 id="附录包名对应的app，系统版本不同，数量有差异"><a href="#附录包名对应的app，系统版本不同，数量有差异" class="headerlink" title="附录包名对应的app，系统版本不同，数量有差异"></a>附录包名对应的app，系统版本不同，数量有差异</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">package:/data/app/com.mitv.video-1.apk=com.mitv.video</div><div class="line">package:/data/app/com.xiaomi.mitv.payment-1.apk=com.xiaomi.mitv.payment</div><div class="line">package:/vendor/app/MiTVWifiDisplay.apk=com.xiaomi.mitv.wfd</div><div class="line">package:/system/priv-app/DefaultContainerService.apk=com.android.defcontainer</div><div class="line">package:/system/app/QuickSearchBox.apk=com.android.quicksearchbox</div><div class="line">package:/system/priv-app/Contacts.apk=com.android.contacts</div><div class="line">package:/system/priv-app/TeleService.apk=com.android.phone</div><div class="line">package:/system/app/HTMLViewer.apk=com.android.htmlviewer</div><div class="line">package:/vendor/app/SmartHomeTV.apk=com.xiaomi.smarthome.tv</div><div class="line">package:/system/app/Bluetooth.apk=com.android.bluetooth</div><div class="line">package:/system/priv-app/CalendarProvider.apk=com.android.providers.calendar</div><div class="line">package:/data/app/com.xiaomi.tv.gallery-2.apk=com.xiaomi.tv.gallery</div><div class="line">package:/vendor/app/MiTVService.apk=com.xiaomi.mitv.services</div><div class="line">package:/system/app/Browser.apk=com.android.browser</div><div class="line">package:/vendor/app/MiMusic2.apk=com.xiaomi.mimusic</div><div class="line">package:/vendor/app/MiTVUpgrade.apk=com.xiaomi.mitv.upgrade</div><div class="line">package:/vendor/app/PushService.apk=com.miui.cloudservice</div><div class="line">package:/vendor/app/MiTVPay.apk=com.xiaomi.mitv.pay</div><div class="line">package:/system/app/DownloadProviderUi.apk=com.android.providers.downloads.ui</div><div class="line">package:/system/app/DocumentsUI.apk=com.android.documentsui</div><div class="line">package:/system/priv-app/SharedStorageBackup.apk=com.android.sharedstoragebackup</div><div class="line">package:/vendor/app/DeviceReport.apk=com.xiaomi.devicereport</div><div class="line">package:/system/priv-app/VpnDialogs.apk=com.android.vpndialogs</div><div class="line">package:/vendor/app/jiajia-jianshenfang_T6.apk=com.jiajia.yundonghui.mitv</div><div class="line">package:/vendor/app/MiTVCommentService.apk=com.xiaomi.mitv.commentservice</div><div class="line">package:/system/app/Provision.apk=com.android.provision</div><div class="line">package:/vendor/app/MiTvGameCenter.apk=com.xiaomi.mibox.gamecenter</div><div class="line">package:/vendor/app/BaiduCloud.apk=com.baidu.tv.download</div><div class="line">package:/system/priv-app/MediaProvider.apk=com.android.providers.media</div><div class="line">package:/vendor/app/AppUpgrade.apk=com.xiaomi.tv.appupgrade</div><div class="line">package:/vendor/app/cm-sdk-release.apk=com.cleanmaster.sdk</div><div class="line">package:/system/app/CertInstaller.apk=com.android.certinstaller</div><div class="line">package:/vendor/app/DlnaTVService.apk=com.xiaomi.dlnatvservice</div><div class="line">package:/vendor/app/MiTVMediaExplorerDaemon.apk=com.xiaomi.mitv.media</div><div class="line">package:/system/app/TvService.apk=mitv.service</div><div class="line">package:/vendor/app/MiTVMultiCast.apk=com.hpplay.happyplay.aw.xm</div><div class="line">package:/vendor/app/MiGameCenterSDKService.apk=com.xiaomi.gamecenter.sdk.service.mibox</div><div class="line">package:/vendor/app/AirkanTVService.apk=com.duokan.airkan.tvbox</div><div class="line">package:/system/priv-app/Settings.apk=com.android.settings</div><div class="line">package:/vendor/app/MiTVSettingsProvider.apk=com.xiaomi.mitv.providers.settings</div><div class="line">package:/vendor/app/PhotoSlideShow.apk=com.duokan.application.photoviewer</div><div class="line">package:/data/app/com.android.packageinstaller-1.apk=com.android.packageinstaller</div><div class="line">package:/system/app/TelephonyProvider.apk=com.android.providers.telephony</div><div class="line">package:/vendor/app/UDTService.apk=com.xiaomi.milink.udt</div><div class="line">package:/system/app/PicoTts.apk=com.svox.pico</div><div class="line">package:/data/app/com.xiaomi.mitv.shop-1.apk=com.xiaomi.mitv.shop</div><div class="line">package:/vendor/app/MiTVSystemUI.apk=com.xiaomi.mitv.systemui</div><div class="line">package:/system/priv-app/FusedLocation.apk=com.android.location.fused</div><div class="line">package:/system/priv-app/BackupRestoreation.apk=com.android.backup</div><div class="line">package:/system/priv-app/SettingsProvider.apk=com.android.providers.settings</div><div class="line">package:/vendor/app/Mipay.apk=com.mipay.wallet.tv</div><div class="line">package:/system/priv-app/DownloadProvider.apk=com.android.providers.downloads</div><div class="line">package:/data/app/com.xiaomi.mitv.advertise-1.apk=com.xiaomi.mitv.advertise</div><div class="line">package:/system/app/SoundRecorder.apk=com.android.soundrecorder</div><div class="line">package:/vendor/app/MiBoxLockScreen.apk=com.xiaomi.mibox.lockscreen</div><div class="line">package:/system/app/LatinIME.apk=com.android.inputmethod.latin</div><div class="line">package:/system/priv-app/ProxyHandler.apk=com.android.proxyhandler</div><div class="line">package:/vendor/app/XMAccountManager.apk=com.xiaomi.account</div><div class="line">package:/vendor/app/TVPushService.apk=com.xiaomi.mitv.tvpush.tvpushservice</div><div class="line">package:/vendor/app/mitvmediaplayer.apk=com.xiaomi.mitv.player</div><div class="line">package:/vendor/app/XMAccountAuth.apk=com.xiaomi.account.auth</div><div class="line">package:/vendor/app/RemoteControllerService.apk=com.xiaomi.mitv.remotecontroller.service</div><div class="line">package:/vendor/app/CloudAlbum.apk=com.duokan.cloudalbum</div><div class="line">package:/data/app/com.xiaomi.tweather-1.apk=com.xiaomi.tweather</div><div class="line">package:/system/app/UserDictionaryProvider.apk=com.android.providers.userdictionary</div><div class="line">package:/system/app/Factory.apk=com.duokan.factorytest</div><div class="line">package:/vendor/app/MiTVPinyinIME.apk=com.android.inputmethod.pinyin</div><div class="line">package:/vendor/app/MiTVDesktop.apk=com.xiaomi.tv.desktop</div><div class="line">package:/vendor/app/MiTVMediaExplorer.apk=com.xiaomi.mitv.mediaexplorer</div><div class="line">package:/system/app/PacProcessor.apk=com.android.pacprocessor</div><div class="line">package:/data/app/com.xiaomi.voicecontrol-1.apk=com.xiaomi.voicecontrol</div><div class="line">package:/vendor/app/MiTVDownload.apk=com.xiaomi.mitv.download</div><div class="line">package:/system/framework/framework-res.apk=android</div><div class="line">package:/system/priv-app/ContactsProvider.apk=com.android.providers.contacts</div><div class="line">package:/system/priv-app/ExternalStorageProvider.apk=com.android.externalstorage</div><div class="line">package:/vendor/app/NameService.apk=com.xiaomi.tv.nameservice</div><div class="line">package:/system/app/BasicDreams.apk=com.android.dreams.basic</div><div class="line">package:/vendor/app/SystemUI_M8.apk=com.android.systemui</div><div class="line">package:/vendor/app/MiTVStat.apk=com.xiaomi.statistic</div><div class="line">package:/system/app/KeyChain.apk=com.android.keychain</div><div class="line">package:/vendor/app/MiTVUserView.apk=com.xiaomi.tv.mitvuser</div><div class="line">package:/system/app/MiTVSettings-new.apk=com.xiaomi.mitv.settings</div><div class="line">package:/system/app/TVCalendar.apk=com.xiaomi.mitv.calendar</div><div class="line">package:/data/app/com.xiaomi.mitv.assistant.manual-1.apk=com.xiaomi.mitv.assistant.manual</div><div class="line">package:/system/priv-app/Keyguard.apk=com.android.keyguard</div><div class="line">package:/vendor/app/BaiduInput.apk=com.baidu.input</div><div class="line">package:/data/app/com.xiaomi.mitv.appstore-2.apk=com.xiaomi.mitv.appstore</div><div class="line">package:/system/priv-app/Shell.apk=com.android.shell</div><div class="line">package:/vendor/app/XiaomiServiceFramework.apk=com.xiaomi.xmsf</div><div class="line">package:/data/app/com.xiaomi.mitv.tvmanager-2.apk=com.xiaomi.mitv.tvmanager</div><div class="line">package:/vendor/app/SearchCenter.apk=com.xiaomi.mitv.searchcenter</div><div class="line">package:/system/priv-app/CleanMasterTV.apk=com.cmcm.cleanmaster.tv</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概叙&quot;&gt;&lt;a href=&quot;#概叙&quot; class=&quot;headerlink&quot; title=&quot;概叙&quot;&gt;&lt;/a&gt;概叙&lt;/h2&gt;&lt;p&gt;小米系列的产品，刚开始主打发烧友，便宜又做工好，性价比高。陆陆续续买了不少小米的产品，主要考虑可以组网，做智能家居。&lt;br&gt;后面公司规模扩大，开始频繁投放广告，产品也变得平庸了。小米电视升级后，开机广告，暂停广告，关机也要广告，实在不能忍。&lt;br&gt;广告类型主要有2种，1个是电视平台的广告，开关机广告那些。另一个是视频播放里面的广告，类似优酷视频那种。&lt;br&gt;目前能去的是第一种，第二种会去的分享一下。&lt;/p&gt;
&lt;h2 id=&quot;去广告方法1&quot;&gt;&lt;a href=&quot;#去广告方法1&quot; class=&quot;headerlink&quot; title=&quot;去广告方法1&quot;&gt;&lt;/a&gt;去广告方法1&lt;/h2&gt;&lt;p&gt;家里路由器有网址屏蔽功能，直接把广告网址屏蔽，&lt;br&gt;“ad.xiaomi.com”,”ad1.xiaomi.com”,”ad.mi.com”添加进黑名单。&lt;br&gt;这个方式是从广告来源过滤，如果小米改了网址就失效了。&lt;/p&gt;
&lt;h2 id=&quot;方法2禁用广告app&quot;&gt;&lt;a href=&quot;#方法2禁用广告app&quot; class=&quot;headerlink&quot; title=&quot;方法2禁用广告app&quot;&gt;&lt;/a&gt;方法2禁用广告app&lt;/h2&gt;
    
    </summary>
    
    
      <category term="生活" scheme="http://aimigit.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="去广告" scheme="http://aimigit.github.io/tags/%E5%8E%BB%E5%B9%BF%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>ntp_时间同步服务器</title>
    <link href="http://aimigit.github.io/2017/09/28/ntp-time-sync-server/"/>
    <id>http://aimigit.github.io/2017/09/28/ntp-time-sync-server/</id>
    <published>2017-09-28T01:59:42.000Z</published>
    <updated>2017-09-28T02:18:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="时间同步服务器"><a href="#时间同步服务器" class="headerlink" title="时间同步服务器"></a>时间同步服务器</h2><p>在某些场景，比如抢购，秒杀，支付类，服务器时间等，要求时间精确。<br>查了国家授时中心，竟然没找到同步服务器，有个44的ip地址，测试一下同步失败，不稳定。最后使用阿里云的NTP服务器。收录一下</p>
<ul>
<li>阿里云的NTP服务，<br>time1.aliyun.com<br>time2.aliyun.com<br>time3.aliyun.com<br>time4.aliyun.com<br>time5.aliyun.com<br>time6.aliyun.com<br>time7.aliyun.com<br>如果使用ntpdate，可以直接使用time.pool.aliyun.com</li>
</ul>
<p>如果是用国外的服务器，可以使用google的。</p>
<a id="more"></a>    
<ul>
<li>谷歌的NTP服务</li>
</ul>
<p>time1.google.com<br>time2.google.com<br>time3.google.com<br>time4.google.com</p>
<ul>
<li>苹果的NTP服务</li>
</ul>
<p>time1.apple.com<br>time2.apple.com<br>time3.apple.com<br>time4.apple.com<br>time5.apple.com<br>time6.apple.com<br>time7.apple.com</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;时间同步服务器&quot;&gt;&lt;a href=&quot;#时间同步服务器&quot; class=&quot;headerlink&quot; title=&quot;时间同步服务器&quot;&gt;&lt;/a&gt;时间同步服务器&lt;/h2&gt;&lt;p&gt;在某些场景，比如抢购，秒杀，支付类，服务器时间等，要求时间精确。&lt;br&gt;查了国家授时中心，竟然没找到同步服务器，有个44的ip地址，测试一下同步失败，不稳定。最后使用阿里云的NTP服务器。收录一下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;阿里云的NTP服务，&lt;br&gt;time1.aliyun.com&lt;br&gt;time2.aliyun.com&lt;br&gt;time3.aliyun.com&lt;br&gt;time4.aliyun.com&lt;br&gt;time5.aliyun.com&lt;br&gt;time6.aliyun.com&lt;br&gt;time7.aliyun.com&lt;br&gt;如果使用ntpdate，可以直接使用time.pool.aliyun.com&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果是用国外的服务器，可以使用google的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://aimigit.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="时间同步" scheme="http://aimigit.github.io/tags/%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/"/>
    
  </entry>
  
  <entry>
    <title>引入代码高亮显示</title>
    <link href="http://aimigit.github.io/2017/09/18/hightlight_code/"/>
    <id>http://aimigit.github.io/2017/09/18/hightlight_code/</id>
    <published>2017-09-18T03:33:26.000Z</published>
    <updated>2017-09-18T04:30:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="代码高亮显示"><a href="#代码高亮显示" class="headerlink" title="代码高亮显示"></a>代码高亮显示</h2><p>代码高亮显示效果，使用的是hightlight.js  <a href="https://highlightjs.org/" target="_blank" rel="external">https://highlightjs.org/</a><br>使用方法很简单</p>
<ul>
<li>在页面引入对应代码，我使用的cdn库</li>
</ul>
<p>css,有多个样式可选，在官网自行查看<br>&lt;link rel=”stylesheet” href=”//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/default.min.css”&gt;<br>&lt;script src=”//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js”&gt; &lt;/script&gt;<br>&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;</p>
<ul>
<li>显示的代码用以下标记括起来，支持多语法java，php，c++等等</li>
</ul>
<p>&lt;pre&gt;&lt;code class=”html”&gt;。。。代码。。。&lt;/code&gt;&lt;/pre&gt;</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;代码高亮显示&quot;&gt;&lt;a href=&quot;#代码高亮显示&quot; class=&quot;headerlink&quot; title=&quot;代码高亮显示&quot;&gt;&lt;/a&gt;代码高亮显示&lt;/h2&gt;&lt;p&gt;代码高亮显示效果，使用的是hightlight.js  &lt;a href=&quot;https://highlight
    
    </summary>
    
    
      <category term="技术" scheme="http://aimigit.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="hightlight" scheme="http://aimigit.github.io/tags/hightlight/"/>
    
  </entry>
  
  <entry>
    <title>nginx_负载均衡配置</title>
    <link href="http://aimigit.github.io/2017/09/16/nginx-balance/"/>
    <id>http://aimigit.github.io/2017/09/16/nginx-balance/</id>
    <published>2017-09-16T08:03:28.000Z</published>
    <updated>2017-10-28T02:40:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>nginx 目前用的比较多了，官网 <a href="https://nginx.org/" target="_blank" rel="external">https://nginx.org/</a></p>
<h2 id="nginx-常用命令"><a href="#nginx-常用命令" class="headerlink" title="nginx 常用命令"></a>nginx 常用命令</h2><ul>
<li>nginx   启动</li>
<li>nginx   -c /etc/nginx/nginx.conf  指定配置文件启动</li>
<li>nginx -s stop  关闭</li>
<li>nginx -t  检测配置文件</li>
<li>nginx -s reload 重载配置文件</li>
</ul>
<a id="more"></a>    
<h2 id="配置文件nginx-conf例子参考"><a href="#配置文件nginx-conf例子参考" class="headerlink" title="配置文件nginx.conf例子参考"></a>配置文件nginx.conf例子参考</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div></pre></td><td class="code"><pre><div class="line">   <span class="attribute">user</span>  webuser;</div><div class="line"></div><div class="line"><span class="comment">#worker进程数，通常设置等同于CPU数量，auto为自动检测</span></div><div class="line"><span class="attribute">worker_processes</span>  auto;</div><div class="line"><span class="comment">#worker进程打开最大文件数，可CPU*10000设置</span></div><div class="line"><span class="attribute">worker_rlimit_nofile</span> <span class="number">100000</span>;</div><div class="line"></div><div class="line"><span class="comment">#error_log  logs/error.log;</span></div><div class="line"><span class="attribute">error_log</span>  logs/error.log  <span class="literal">notice</span>;</div><div class="line"><span class="comment">#error_log  logs/error.log  info;</span></div><div class="line"></div><div class="line"><span class="attribute">pid</span>        logs/nginx.pid;</div><div class="line"></div><div class="line"><span class="section">events</span> &#123;</div><div class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</div><div class="line">   <span class="comment">#告诉nginx收到一个新链接通知后接受尽可能多的链接</span></div><div class="line">    <span class="attribute">multi_accept</span> <span class="literal">on</span>;</div><div class="line">   <span class="comment">#设置用于复用客户端线程的轮训方法</span></div><div class="line">   <span class="attribute">use</span> <span class="literal">epoll</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="section">http</span> &#123;</div><div class="line">    <span class="attribute">include</span>       mime.types;</div><div class="line">    <span class="attribute">default_type</span>  application/octet-stream;</div><div class="line"></div><div class="line">    <span class="attribute">log_format</span>  main  <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></div><div class="line">                      <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></div><div class="line">                      <span class="string">'"<span class="variable">$http_user_agent</span>" "<span class="variable">$http_x_forwarded_for</span>"'</span>;</div><div class="line">   </div><div class="line">    <span class="comment">#设置nginx是否存储访问日志，关闭这个可以让读取磁盘IO操作更快</span></div><div class="line">    <span class="comment">#access_log  logs/access.log  main;</span></div><div class="line">    <span class="comment">#优化磁盘IO设置，指定nginx是否调用sendfile函数来输出文件，普通应用设为on，下载等磁盘IO高的应用，可设为off</span></div><div class="line">    <span class="attribute">sendfile</span>        <span class="literal">off</span>;</div><div class="line">    <span class="comment">#tcp_nopush     on;</span></div><div class="line"></div><div class="line">    <span class="comment">#keepalive_timeout  0;</span></div><div class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">30</span>;</div><div class="line">    <span class="comment">#设置用户保存各种key的共享内存的参数，5m指的是5兆</span></div><div class="line">    <span class="attribute">limit_conn_zone</span> <span class="variable">$binary_remote_addr</span> zone=addr:<span class="number">5m</span>;</div><div class="line">    <span class="comment">#为给定的key设置最大的连接数，这里的key是addr，设定的值是100，就是说允许每一个IP地址最多同时打开100个连接</span></div><div class="line">    <span class="attribute">limit_conn</span> addr <span class="number">100</span>;</div><div class="line"></div><div class="line">    <span class="comment">#gzip  on;</span></div><div class="line">    <span class="comment">#gzip_disable "MSIE [1-6]."; </span></div><div class="line">    <span class="comment">#开发缓存的同时也指定了缓存文件的最大数量，20s如果文件没有请求则删除缓存</span></div><div class="line">    <span class="attribute">open_file_cache</span> max=<span class="number">100000</span> inactive=<span class="number">20s</span>;</div><div class="line">    <span class="comment">#指多长时间检查一次缓存的有效信息</span></div><div class="line">    <span class="attribute">open_file_cache_valid</span> <span class="number">60s</span>;</div><div class="line">    <span class="comment">#文件缓存最小的访问次数，只有访问超过5次的才会被缓存</span></div><div class="line">    <span class="attribute">open_file_cache_min_uses</span> <span class="number">5</span>;</div><div class="line">    <span class="comment">#当搜索一个文件时是否缓存错误信息</span></div><div class="line">    <span class="attribute">open_file_cache_errors</span> <span class="literal">on</span>;</div><div class="line"></div><div class="line">    <span class="comment">#允许客户端请求的最大单文件字节数</span></div><div class="line">    <span class="attribute">client_max_body_size</span> <span class="number">20m</span>;</div><div class="line">    <span class="comment">#冲区代理缓冲用户端请求的最大字节数</span></div><div class="line">    <span class="attribute">client_header_buffer_size</span> <span class="number">32k</span>;</div><div class="line">   </div><div class="line">    <span class="attribute">upstream</span> local_host&#123;  </div><div class="line">        <span class="comment">#指定轮询权重，weight和访问比率成正比，用于后端服务器性能不均的情况。</span></div><div class="line">        <span class="attribute">server</span> <span class="number">127.0.0.1:8181</span> weight=<span class="number">1</span>;  </div><div class="line">        <span class="attribute">server</span> <span class="number">127.0.0.1:8182</span> weight=<span class="number">1</span>;   </div><div class="line">        <span class="comment">#每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。</span></div><div class="line">        <span class="comment">#ip_hash;  </span></div><div class="line"></div><div class="line">    &#125;  </div><div class="line"></div><div class="line">    <span class="section">server</span> &#123;</div><div class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</div><div class="line">        <span class="attribute">server_name</span>  www.web.cn;</div><div class="line"></div><div class="line">        <span class="attribute">charset</span> UTF-<span class="number">8</span>;</div><div class="line"></div><div class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></div><div class="line">		<span class="comment">#网站1</span></div><div class="line">        <span class="attribute">location</span> /myweb1/&#123;</div><div class="line">			<span class="comment">#真实ip穿透</span></div><div class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</div><div class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</div><div class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</div><div class="line">            <span class="attribute">proxy_pass</span> http://www.web.cn:9001;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">#网站2</span></div><div class="line">        <span class="attribute">location</span> /myweb2/&#123;</div><div class="line">           <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</div><div class="line">           <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</div><div class="line">           <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</div><div class="line">           <span class="attribute">proxy_pass</span> http://www.web.cn:9002;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">#接口</span></div><div class="line">        <span class="attribute">location</span> /web/api&#123;</div><div class="line">           <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</div><div class="line">           <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</div><div class="line">           <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</div><div class="line">		   <span class="comment">#负载均衡</span></div><div class="line">           <span class="attribute">proxy_pass</span> http://local_host;</div><div class="line">		   <span class="comment">#关闭日志</span></div><div class="line">           <span class="attribute">access_log</span> <span class="literal">off</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">#静态图片</span></div><div class="line">        <span class="attribute">location</span> /bqms/static/api/ &#123;</div><div class="line">             <span class="attribute">root</span> /home/webapps/image/;</div><div class="line">             <span class="attribute">index</span>  index.html index.htm;</div><div class="line">             <span class="attribute">expires</span> <span class="number">90d</span>;</div><div class="line">             <span class="attribute">access_log</span> <span class="literal">off</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="attribute">location</span>  / &#123;</div><div class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</div><div class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</div><div class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</div><div class="line">            <span class="attribute">root</span>   html;</div><div class="line">            <span class="attribute">index</span>  index.html index.htm;</div><div class="line"> </div><div class="line">        &#125;</div><div class="line">        <span class="comment">#error_page  404              /404.html;</span></div><div class="line">        </div><div class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></div><div class="line">        <span class="comment">#</span></div><div class="line">        <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</div><div class="line">        <span class="attribute">location</span> = /50x.html &#123;</div><div class="line">            <span class="attribute">root</span>   html;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment"># deny access to .htaccess files, if Apache's document root</span></div><div class="line">        <span class="comment"># concurs with nginx's one</span></div><div class="line">        <span class="comment">#</span></div><div class="line">        <span class="comment">#location ~ /\.ht &#123;</span></div><div class="line">        <span class="comment">#    deny  all;</span></div><div class="line">        <span class="comment">#&#125;</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment"># another virtual host using mix of IP-, name-, and port-based configuration</span></div><div class="line">    <span class="comment">#</span></div><div class="line">    <span class="comment">#server &#123;</span></div><div class="line">    <span class="comment">#    listen       8000;</span></div><div class="line">    <span class="comment">#    listen       somename:8080;</span></div><div class="line">    <span class="comment">#    server_name  somename  alias  another.alias;</span></div><div class="line"></div><div class="line">    <span class="comment">#    location / &#123;</span></div><div class="line">    <span class="comment">#        root   html;</span></div><div class="line">    <span class="comment">#        index  index.html index.htm;</span></div><div class="line">    <span class="comment">#    &#125;</span></div><div class="line">    <span class="comment">#&#125;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment"># HTTPS server</span></div><div class="line">    <span class="comment">#</span></div><div class="line">    <span class="comment">#server &#123;</span></div><div class="line">    <span class="comment">#    listen       443 ssl;</span></div><div class="line">    <span class="comment">#    server_name  localhost;</span></div><div class="line"></div><div class="line">    <span class="comment">#    ssl_certificate      cert.pem;</span></div><div class="line">    <span class="comment">#    ssl_certificate_key  cert.key;</span></div><div class="line"></div><div class="line">    <span class="comment">#    ssl_session_cache    shared:SSL:1m;</span></div><div class="line">    <span class="comment">#    ssl_session_timeout  5m;</span></div><div class="line"></div><div class="line">    <span class="comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span></div><div class="line">    <span class="comment">#    ssl_prefer_server_ciphers  on;</span></div><div class="line"></div><div class="line">    <span class="comment">#    location / &#123;</span></div><div class="line">    <span class="comment">#        root   html;</span></div><div class="line">    <span class="comment">#        index  index.html index.htm;</span></div><div class="line">    <span class="comment">#    &#125;</span></div><div class="line">    <span class="comment">#&#125;</span></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;nginx 目前用的比较多了，官网 &lt;a href=&quot;https://nginx.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://nginx.org/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;nginx-常用命令&quot;&gt;&lt;a href=&quot;#nginx-常用命令&quot; class=&quot;headerlink&quot; title=&quot;nginx 常用命令&quot;&gt;&lt;/a&gt;nginx 常用命令&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;nginx   启动&lt;/li&gt;
&lt;li&gt;nginx   -c /etc/nginx/nginx.conf  指定配置文件启动&lt;/li&gt;
&lt;li&gt;nginx -s stop  关闭&lt;/li&gt;
&lt;li&gt;nginx -t  检测配置文件&lt;/li&gt;
&lt;li&gt;nginx -s reload 重载配置文件&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://aimigit.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="nginx" scheme="http://aimigit.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>markdown语法</title>
    <link href="http://aimigit.github.io/2017/09/01/markdown_code/"/>
    <id>http://aimigit.github.io/2017/09/01/markdown_code/</id>
    <published>2017-09-01T05:40:18.000Z</published>
    <updated>2017-09-01T06:44:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>hexo 支持markdown，为了让博客写的更优美，建议学习一下。</p>
<h1 id="markdown语法"><a href="#markdown语法" class="headerlink" title="markdown语法"></a>markdown语法</h1><p><img src="/assets/blog_img/markdown.jpg" alt="markdown"></p>
<ol>
<li><p>标题设置（让字体变大，和word的标题意思一样）<br>在Markdown当中设置标题，有两种方式：<br>第一种：通过在文字下方添加“=”和“-”，他们分别表示一级标题和二级标题。<br>第二种：在文字开头加上 “#”，通过“#”数量表示几级标题。（一共只有1~6级标题，1级标题字体最大）</p>
</li>
<li><p>块注释（blockquote）<br>通过在文字开头添加“&gt;”表示块注释。（当&gt;和文字之间添加五个blank时，块注释的文字会有变化。）</p>
</li>
</ol>
<a id="more"></a>
<ol>
<li><p>斜体<br>将需要设置为斜体的文字两端使用1个“*”或者“_”夹起来</p>
</li>
<li><p>粗体<br>将需要设置为斜体的文字两端使用2个“*”或者“_”夹起来</p>
</li>
<li><p>无序列表<br>在文字开头添加(<em>, +, and -)实现无序列表。但是要注意在(</em>, +, and -)和文字之间需要添加空格。（建议：一个文档中只是用一种无序列表的表示方式）</p>
</li>
<li><p>有序列表<br>使用数字后面跟上句号。（还要有空格）</p>
</li>
<li><p>链接（Links）<br>Markdown中有两种方式，实现链接，分别为内联方式和引用方式。<br>内联方式：This is an <a href="http://example.com/" target="_blank" rel="external">example link</a>.<br>引用方式：<br>I get 10 times more traffic from <a href="http://google.com/" title="Google" target="_blank" rel="external">Google</a> than from <a href="http://search.yahoo.com/" title="Yahoo Search" target="_blank" rel="external">Yahoo</a> or <a href="http://search.msn.com/" title="MSN Search" target="_blank" rel="external">MSN</a>.  </p>
</li>
</ol>
<ol>
<li>图片（Images）<br>图片的处理方式和链接的处理方式，非常的类似。<br>内联方式：<img src="/path/to/img.jpg" alt="alt text" title="Title"><br>引用方式：<br><img src="/path/to/img.jpg" alt="alt text" title="Title"> </li>
</ol>
<ol>
<li><p>代码（HTML中所谓的Code）<br>实现方式有两种：<br>第一种：简单文字出现一个代码框。使用<code>&lt;blockquote&gt;</code>。（<code>不是单引号而是左上角的ESC下面~中的</code>）<br>第二种：大片文字需要实现代码框。使用Tab和四个空格。</p>
</li>
<li><p>脚注（footnote）<br>实现方式如下：<br>hello<a href="hi">^hello</a></p>
</li>
</ol>
<ol>
<li>下划线<br>在空白行下方添加三条“-”横线。（前面讲过在文字下方添加“-”，实现的2级标题）</li>
</ol>
<h1 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h1><p>支持的软件非常多，找个自己喜欢的就行。</p>
<ul>
<li>在线工具<a href="https://stackedit.io/editor" target="_blank" rel="external">https://stackedit.io/editor</a></li>
<li>Typora</li>
<li>谷歌浏览器插件 Minimalist Markdown Editor</li>
<li>Sublime Text</li>
<li>Atom</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hexo 支持markdown，为了让博客写的更优美，建议学习一下。&lt;/p&gt;
&lt;h1 id=&quot;markdown语法&quot;&gt;&lt;a href=&quot;#markdown语法&quot; class=&quot;headerlink&quot; title=&quot;markdown语法&quot;&gt;&lt;/a&gt;markdown语法&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/assets/blog_img/markdown.jpg&quot; alt=&quot;markdown&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;标题设置（让字体变大，和word的标题意思一样）&lt;br&gt;在Markdown当中设置标题，有两种方式：&lt;br&gt;第一种：通过在文字下方添加“=”和“-”，他们分别表示一级标题和二级标题。&lt;br&gt;第二种：在文字开头加上 “#”，通过“#”数量表示几级标题。（一共只有1~6级标题，1级标题字体最大）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;块注释（blockquote）&lt;br&gt;通过在文字开头添加“&amp;gt;”表示块注释。（当&amp;gt;和文字之间添加五个blank时，块注释的文字会有变化。）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://aimigit.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="markdown" scheme="http://aimigit.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>github+hexo搭建博客</title>
    <link href="http://aimigit.github.io/2017/08/31/github_hexo_start/"/>
    <id>http://aimigit.github.io/2017/08/31/github_hexo_start/</id>
    <published>2017-08-31T08:11:09.000Z</published>
    <updated>2018-09-04T05:54:43.575Z</updated>
    
    <content type="html"><![CDATA[<p>github搭建博客，网上的教程很多了。这边搭建过程，简单记录一下。<br>hexo是博客，需要node.js，部署在github，所以需要下面这些</p>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol>
<li>github帐号一个</li>
<li>github软件</li>
<li>node.js软件</li>
<li>hexo软件</li>
</ol>
<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><ul>
<li>github帐号，<a href="https://github.com/" target="_blank" rel="external">https://github.com/</a> 官网注册</li>
<li>下载安装客户端<a href="https://git-scm.com/downloads" target="_blank" rel="external">https://git-scm.com/downloads</a></li>
<li>下载安装<a href="https://nodejs.org" target="_blank" rel="external">https://nodejs.org</a>  建议直接安装在c盘，使用命令行方便<br>这样环境就搭建好了，hexo后面用命令安装。</li>
</ul>
<a id="more"></a>
<h1 id="安装hexo配置"><a href="#安装hexo配置" class="headerlink" title="安装hexo配置"></a>安装hexo配置</h1><p>在d盘创建文件夹blog<br>打开Git bash命令行窗口，输入安装命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo-cli</div><div class="line">npm install hexo-deployer-git --save</div><div class="line"></div><div class="line"><span class="built_in">cd</span> d:/blog</div><div class="line">换国内镜像点</div><div class="line">npm config <span class="built_in">set</span> registry <span class="string">"https://registry.npm.taobao.org"</span></div><div class="line">安装</div><div class="line">hexo init</div><div class="line">npm install</div><div class="line">hexo generate</div><div class="line">hexo server</div></pre></td></tr></table></figure></p>
<p>正常启动后在浏览器查看<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a></p>
<h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><p>github帐号创建一个同名的项目 “youname.github.io”。<br>然后获取到项目ssh地址 git@github.com:youname/youname.github.io.git<br>修改d:/blog/_config.yml 文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repository: git@github.com:youname/youname.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<h2 id="生成ssh-key"><a href="#生成ssh-key" class="headerlink" title="生成ssh key"></a>生成ssh key</h2><p>在 Git Bash 下执行如下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git config --global user.name <span class="string">"YOUR NAME"</span></div><div class="line">git config --global user.email <span class="string">"YOUR EMAIL ADDRESS"</span></div><div class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">"github帐号邮箱"</span>  一路回车</div><div class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(ssh-agent -s)</span>"</span></div><div class="line">ssh-add ~/.ssh/id_rsa</div><div class="line">clip &lt; ~/.ssh/id_rsa.pub</div></pre></td></tr></table></figure></p>
<p>登录 Github 帐号，依次点击自己的头像，Settings&gt;SSH and GPG keys&gt;Add SSH key ,把key粘贴进去保存<br>返回Git Bash，输入<br><code>ssh -T git@github.com<br></code><br>如果连接成功，显示Hi XXX! You’ve successfully authenticated, but GitHub does not provide shell access.<br>输入<br><code>hexo deploy<br></code><br>部署成功后，在浏览器输入，youname.github.io<br>到此，搭建博客成功。<br>后续，你可以更改博客主题，绑定独立域名等等。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;github搭建博客，网上的教程很多了。这边搭建过程，简单记录一下。&lt;br&gt;hexo是博客，需要node.js，部署在github，所以需要下面这些&lt;/p&gt;
&lt;h1 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;github帐号一个&lt;/li&gt;
&lt;li&gt;github软件&lt;/li&gt;
&lt;li&gt;node.js软件&lt;/li&gt;
&lt;li&gt;hexo软件&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;github帐号，&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/&lt;/a&gt; 官网注册&lt;/li&gt;
&lt;li&gt;下载安装客户端&lt;a href=&quot;https://git-scm.com/downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://git-scm.com/downloads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;下载安装&lt;a href=&quot;https://nodejs.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://nodejs.org&lt;/a&gt;  建议直接安装在c盘，使用命令行方便&lt;br&gt;这样环境就搭建好了，hexo后面用命令安装。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://aimigit.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="hexo" scheme="http://aimigit.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
